{"version":3,"file":"main.js","mappings":"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","sources":["webpack://libra/./src/scripts/data.js","webpack://libra/./node_modules/chart.js/dist/chunks/helpers.segment.js","webpack://libra/./node_modules/chart.js/dist/chart.js","webpack://libra/./node_modules/chart.js/auto/auto.js","webpack://libra/./src/index.js"],"sourcesContent":["export const countries = {\n    \"Brazil\": {\n        \"BRL\": 1212\n    },\n    \"China\": {\n        \"CNY\": 3872\n    },\n    \"Spain\": {\n        \"EUR\": 1050\n    },\n    \"India\": {\n        \"INR\": 9306\n    },\n    \"Russia\": {\n        \"RUB\": 13617\n    },\n    \"USA\": {\n        \"USD\": 1276\n    }\n}\nexport const products = {\n    mcchicken: {\n        prices: {\n            \"BRL\": 20.90,\n            \"CNY\": 12,\n            \"EUR\": 4.75,\n            \"INR\": 112,\n            \"RUB\": 100,\n            \"USD\": 2\n        },\n        primaryColor: \"#FFC72C\",\n        secondaryColor: \"#27251F\",\n        borderColor: \"rgba(0,0,0,0.5)\",\n        gridColor:\"rgba(0,0,0,.25)\",\n        title: \"Mc Chicken\",\n        subtitle: \"Burger only, not the meal\"\n    },\n    corolla: {\n        prices: {\n            \"BRL\": 147790,\n            \"CNY\": 120000,\n            \"EUR\": 22100,\n            \"INR\": 1646000,\n            \"RUB\": 2032000,\n            \"USD\": 24213\n        },\n        primaryColor: \"#fff\",\n        secondaryColor: \"#EB0A1E\",\n        borderColor: \"rgba(0,0,0,0.5)\",\n        gridColor:\"rgba(0,0,0,.25)\",\n        title: \"Toyota Corolla\",\n        subtitle: \"2022 model, entry version\"\n    },\n    jeans: {\n        prices: {\n            \"BRL\": 460,\n            \"CNY\": 439,\n            \"EUR\": 110,\n            \"INR\": 8500,\n            \"RUB\": 8600,\n            \"USD\": 89\n        },\n        primaryColor: \"#C41230\",\n        secondaryColor: \"#fff\",\n        borderColor: \"rgba(0,0,0,0.5)\",\n        gridColor:\"rgba(255,255,255,.25)\",\n        title: \"Levi's Jeans\",\n        subtitle: \"501® Original Fit Jeans\"\n    },\n    iphone: {\n        prices: {\n            \"BRL\": 9499,\n            \"CNY\": 7999,\n            \"EUR\": 1068,\n            \"INR\": 129900,\n            \"RUB\": 99990,\n            \"USD\": 1122\n        },\n        primaryColor: \"#000\",\n        secondaryColor: \"#fff\",\n        borderColor: \"rgba(0,0,0,0.5)\",\n        gridColor:\"rgba(255,255,255,.25)\",\n        title: \"iPhone\",\n        subtitle: \"iPhone 14 Pro 128GB\"\n    },\n    coke: {\n        prices: {\n            \"BRL\": 3.99,\n            \"CNY\": 9.975, // 4-pack price, divided by 4 (39.9/4)\n            \"EUR\": 1.95,\n            \"INR\": 65,\n            \"RUB\": 51.85,\n            \"USD\": 2.80\n        },\n        primaryColor: \"#F40009\",\n        secondaryColor: \"#fff\",\n        borderColor: \"rgba(0,0,0,0.5)\",\n        gridColor:\"rgba(255,255,255,.5)\",\n        title: \"Coke\",\n        subtitle: \"1L (33oz) bottle\"\n    }\n}","/*!\n * Chart.js v4.0.1\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\n/**\n * @namespace Chart.helpers\n */ /**\n * An empty function that can be used, for example, for optional callback.\n */ function noop() {\n/* noop */ }\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */ const uid = (()=>{\n    let id = 0;\n    return ()=>id++;\n})();\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isNullOrUndef(value) {\n    return value === null || typeof value === 'undefined';\n}\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */ function isArray(value) {\n    if (Array.isArray && Array.isArray(value)) {\n        return true;\n    }\n    const type = Object.prototype.toString.call(value);\n    if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n        return true;\n    }\n    return false;\n}\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */ function isNumberFinite(value) {\n    return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */ function finiteOrDefault(value, defaultValue) {\n    return isNumberFinite(value) ? value : defaultValue;\n}\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */ function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : +value / dimension;\nconst toDimension = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */ function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n    }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n    let i, len, keys;\n    if (isArray(loopable)) {\n        len = loopable.length;\n        if (reverse) {\n            for(i = len - 1; i >= 0; i--){\n                fn.call(thisArg, loopable[i], i);\n            }\n        } else {\n            for(i = 0; i < len; i++){\n                fn.call(thisArg, loopable[i], i);\n            }\n        }\n    } else if (isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n        for(i = 0; i < len; i++){\n            fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n    }\n}\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */ function _elementsEqual(a0, a1) {\n    let i, ilen, v0, v1;\n    if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n    }\n    for(i = 0, ilen = a0.length; i < ilen; ++i){\n        v0 = a0[i];\n        v1 = a1[i];\n        if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */ function clone$1(source) {\n    if (isArray(source)) {\n        return source.map(clone$1);\n    }\n    if (isObject(source)) {\n        const target = Object.create(null);\n        const keys = Object.keys(source);\n        const klen = keys.length;\n        let k = 0;\n        for(; k < klen; ++k){\n            target[keys[k]] = clone$1(source[keys[k]]);\n        }\n        return target;\n    }\n    return source;\n}\nfunction isValidKey(key) {\n    return [\n        '__proto__',\n        'prototype',\n        'constructor'\n    ].indexOf(key) === -1;\n}\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */ function _merger(key, target, source, options) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        merge(tval, sval, options);\n    } else {\n        target[key] = clone$1(sval);\n    }\n}\nfunction merge(target, source, options) {\n    const sources = isArray(source) ? source : [\n        source\n    ];\n    const ilen = sources.length;\n    if (!isObject(target)) {\n        return target;\n    }\n    options = options || {};\n    const merger = options.merger || _merger;\n    let current;\n    for(let i = 0; i < ilen; ++i){\n        current = sources[i];\n        if (!isObject(current)) {\n            continue;\n        }\n        const keys = Object.keys(current);\n        for(let k = 0, klen = keys.length; k < klen; ++k){\n            merger(keys[k], target, current, options);\n        }\n    }\n    return target;\n}\nfunction mergeIf(target, source) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return merge(target, source, {\n        merger: _mergerIf\n    });\n}\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */ function _mergerIf(key, target, source) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        mergeIf(tval, sval);\n    } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n        target[key] = clone$1(sval);\n    }\n}\n/**\n * @private\n */ function _deprecated(scope, value, previous, current) {\n    if (value !== undefined) {\n        console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n    }\n}\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n    // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n    '': (v)=>v,\n    // default resolvers\n    x: (o)=>o.x,\n    y: (o)=>o.y\n};\n/**\n * @private\n */ function _splitKey(key) {\n    const parts = key.split('.');\n    const keys = [];\n    let tmp = '';\n    for (const part of parts){\n        tmp += part;\n        if (tmp.endsWith('\\\\')) {\n            tmp = tmp.slice(0, -1) + '.';\n        } else {\n            keys.push(tmp);\n            tmp = '';\n        }\n    }\n    return keys;\n}\nfunction _getKeyResolver(key) {\n    const keys = _splitKey(key);\n    return (obj)=>{\n        for (const k of keys){\n            if (k === '') {\n                break;\n            }\n            obj = obj && obj[k];\n        }\n        return obj;\n    };\n}\nfunction resolveObjectKey(obj, key) {\n    const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n    return resolver(obj);\n}\n/**\n * @private\n */ function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value)=>typeof value !== 'undefined';\nconst isFunction = (value)=>typeof value === 'function';\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nconst setsEqual = (a, b)=>{\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const item of a){\n        if (!b.has(item)) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * @param e - The event\n * @private\n */ function _isClickEvent(e) {\n    return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */ const PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction almostEquals(x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n}\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */ function niceNum(range) {\n    const roundedRange = Math.round(range);\n    range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n    const niceRange = Math.pow(10, Math.floor(log10(range)));\n    const fraction = range / niceRange;\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n    return niceFraction * niceRange;\n}\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */ function _factorize(value) {\n    const result = [];\n    const sqrt = Math.sqrt(value);\n    let i;\n    for(i = 1; i < sqrt; i++){\n        if (value % i === 0) {\n            result.push(i);\n            result.push(value / i);\n        }\n    }\n    if (sqrt === (sqrt | 0)) {\n        result.push(sqrt);\n    }\n    result.sort((a, b)=>a - b).pop();\n    return result;\n}\nfunction isNumber(n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostWhole(x, epsilon) {\n    const rounded = Math.round(x);\n    return rounded - epsilon <= x && rounded + epsilon >= x;\n}\n/**\n * @private\n */ function _setMinAndMaxByKey(array, target, property) {\n    let i, ilen, value;\n    for(i = 0, ilen = array.length; i < ilen; i++){\n        value = array[i][property];\n        if (!isNaN(value)) {\n            target.min = Math.min(target.min, value);\n            target.max = Math.max(target.max, value);\n        }\n    }\n}\nfunction toRadians(degrees) {\n    return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n    return radians * (180 / PI);\n}\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */ function _decimalPlaces(x) {\n    if (!isNumberFinite(x)) {\n        return;\n    }\n    let e = 1;\n    let p = 0;\n    while(Math.round(x * e) / e !== x){\n        e *= 10;\n        p++;\n    }\n    return p;\n}\n// Gets the angle from vertical upright to the point about a centre.\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n    if (angle < -0.5 * PI) {\n        angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n    return {\n        angle,\n        distance: radialDistanceFromCenter\n    };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */ function _angleDiff(a, b) {\n    return (a - b + PITAU) % TAU - PI;\n}\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */ function _normalizeAngle(a) {\n    return (a % TAU + TAU) % TAU;\n}\n/**\n * @private\n */ function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n    const a = _normalizeAngle(angle);\n    const s = _normalizeAngle(start);\n    const e = _normalizeAngle(end);\n    const angleToStart = _normalizeAngle(s - a);\n    const angleToEnd = _normalizeAngle(e - a);\n    const startToAngle = _normalizeAngle(a - s);\n    const endToAngle = _normalizeAngle(a - e);\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n}\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */ function _limitValue(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * @param {number} value\n * @private\n */ function _int16Range(value) {\n    return _limitValue(value, -32768, 32767);\n}\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */ function _isBetween(value, start, end, epsilon = 1e-6) {\n    return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n    cmp = cmp || ((index)=>table[index] < value);\n    let hi = table.length - 1;\n    let lo = 0;\n    let mid;\n    while(hi - lo > 1){\n        mid = lo + hi >> 1;\n        if (cmp(mid)) {\n            lo = mid;\n        } else {\n            hi = mid;\n        }\n    }\n    return {\n        lo,\n        hi\n    };\n}\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */ const _lookupByKey = (table, key, value, last)=>_lookup(table, value, last ? (index)=>{\n        const ti = table[index][key];\n        return ti < value || ti === value && table[index + 1][key] === value;\n    } : (index)=>table[index][key] < value);\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */ const _rlookupByKey = (table, key, value)=>_lookup(table, value, (index)=>table[index][key] >= value);\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */ function _filterBetween(values, min, max) {\n    let start = 0;\n    let end = values.length;\n    while(start < end && values[start] < min){\n        start++;\n    }\n    while(end > start && values[end - 1] > max){\n        end--;\n    }\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\n}\nconst arrayEvents = [\n    'push',\n    'pop',\n    'shift',\n    'splice',\n    'unshift'\n];\nfunction listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n        array._chartjs.listeners.push(listener);\n        return;\n    }\n    Object.defineProperty(array, '_chartjs', {\n        configurable: true,\n        enumerable: false,\n        value: {\n            listeners: [\n                listener\n            ]\n        }\n    });\n    arrayEvents.forEach((key)=>{\n        const method = '_onData' + _capitalize(key);\n        const base = array[key];\n        Object.defineProperty(array, key, {\n            configurable: true,\n            enumerable: false,\n            value (...args) {\n                const res = base.apply(this, args);\n                array._chartjs.listeners.forEach((object)=>{\n                    if (typeof object[method] === 'function') {\n                        object[method](...args);\n                    }\n                });\n                return res;\n            }\n        });\n    });\n}\nfunction unlistenArrayEvents(array, listener) {\n    const stub = array._chartjs;\n    if (!stub) {\n        return;\n    }\n    const listeners = stub.listeners;\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n        listeners.splice(index, 1);\n    }\n    if (listeners.length > 0) {\n        return;\n    }\n    arrayEvents.forEach((key)=>{\n        delete array[key];\n    });\n    delete array._chartjs;\n}\n/**\n * @param items\n */ function _arrayUnique(items) {\n    const set = new Set();\n    let i, ilen;\n    for(i = 0, ilen = items.length; i < ilen; ++i){\n        set.add(items[i]);\n    }\n    if (set.size === ilen) {\n        return items;\n    }\n    return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n/**\n* Request animation polyfill\n*/ const requestAnimFrame = function() {\n    if (typeof window === 'undefined') {\n        return function(callback) {\n            return callback();\n        };\n    }\n    return window.requestAnimationFrame;\n}();\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */ function throttled(fn, thisArg) {\n    let ticking = false;\n    return function(...args) {\n        if (!ticking) {\n            ticking = true;\n            requestAnimFrame.call(window, ()=>{\n                ticking = false;\n                fn.apply(thisArg, args);\n            });\n        }\n    };\n}\n/**\n * Debounces calling `fn` for `delay` ms\n */ function debounce(fn, delay) {\n    let timeout;\n    return function(...args) {\n        if (delay) {\n            clearTimeout(timeout);\n            timeout = setTimeout(fn, delay, args);\n        } else {\n            fn.apply(this, args);\n        }\n        return delay;\n    };\n}\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */ const _toLeftRightCenter = (align)=>align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */ const _alignStartEnd = (align, start, end)=>align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */ const _textX = (align, left, right, rtl)=>{\n    const check = rtl ? 'left' : 'right';\n    return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n/**\n * Return start and count of visible points.\n * @private\n */ function _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n    const pointCount = points.length;\n    let start = 0;\n    let count = pointCount;\n    if (meta._sorted) {\n        const { iScale , _parsed  } = meta;\n        const axis = iScale.axis;\n        const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n        if (minDefined) {\n            start = _limitValue(Math.min(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, min).lo, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo), 0, pointCount - 1);\n        }\n        if (maxDefined) {\n            count = _limitValue(Math.max(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, max, true).hi + 1, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1), start, pointCount) - start;\n        } else {\n            count = pointCount - start;\n        }\n    }\n    return {\n        start,\n        count\n    };\n}\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */ function _scaleRangesChanged(meta) {\n    const { xScale , yScale , _scaleRanges  } = meta;\n    const newRanges = {\n        xmin: xScale.min,\n        xmax: xScale.max,\n        ymin: yScale.min,\n        ymax: yScale.max\n    };\n    if (!_scaleRanges) {\n        meta._scaleRanges = newRanges;\n        return true;\n    }\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n    Object.assign(_scaleRanges, newRanges);\n    return changed;\n}\n\nconst atEdge = (t)=>t === 0 || t === 1;\nconst elasticIn = (t, s, p)=>-(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p)=>Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */ const effects = {\n    linear: (t)=>t,\n    easeInQuad: (t)=>t * t,\n    easeOutQuad: (t)=>-t * (t - 2),\n    easeInOutQuad: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n    easeInCubic: (t)=>t * t * t,\n    easeOutCubic: (t)=>(t -= 1) * t * t + 1,\n    easeInOutCubic: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n    easeInQuart: (t)=>t * t * t * t,\n    easeOutQuart: (t)=>-((t -= 1) * t * t * t - 1),\n    easeInOutQuart: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n    easeInQuint: (t)=>t * t * t * t * t,\n    easeOutQuint: (t)=>(t -= 1) * t * t * t * t + 1,\n    easeInOutQuint: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n    easeInSine: (t)=>-Math.cos(t * HALF_PI) + 1,\n    easeOutSine: (t)=>Math.sin(t * HALF_PI),\n    easeInOutSine: (t)=>-0.5 * (Math.cos(PI * t) - 1),\n    easeInExpo: (t)=>t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n    easeOutExpo: (t)=>t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n    easeInOutExpo: (t)=>atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n    easeInCirc: (t)=>t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n    easeOutCirc: (t)=>Math.sqrt(1 - (t -= 1) * t),\n    easeInOutCirc: (t)=>(t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n    easeInElastic: (t)=>atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n    easeOutElastic: (t)=>atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n    easeInOutElastic (t) {\n        const s = 0.1125;\n        const p = 0.45;\n        return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n    },\n    easeInBack (t) {\n        const s = 1.70158;\n        return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack (t) {\n        const s = 1.70158;\n        return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack (t) {\n        let s = 1.70158;\n        if ((t /= 0.5) < 1) {\n            return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n        }\n        return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: (t)=>1 - effects.easeOutBounce(1 - t),\n    easeOutBounce (t) {\n        const m = 7.5625;\n        const d = 2.75;\n        if (t < 1 / d) {\n            return m * t * t;\n        }\n        if (t < 2 / d) {\n            return m * (t -= 1.5 / d) * t + 0.75;\n        }\n        if (t < 2.5 / d) {\n            return m * (t -= 2.25 / d) * t + 0.9375;\n        }\n        return m * (t -= 2.625 / d) * t + 0.984375;\n    },\n    easeInOutBounce: (t)=>t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n};\nvar effects$1 = effects;\n\n/*!\n * @kurkle/color v0.2.1\n * https://github.com/kurkle/color#readme\n * (c) 2022 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nfunction isPatternOrGradient(value) {\n    if (value && typeof value === 'object') {\n        const type = value.toString();\n        return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n    }\n    return false;\n}\nfunction color(value) {\n    return isPatternOrGradient(value) ? value : index_esm(value);\n}\nfunction getHoverColor(value) {\n    return isPatternOrGradient(value) ? value : index_esm(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst numbers = [\n    'x',\n    'y',\n    'borderWidth',\n    'radius',\n    'tension'\n];\nconst colors = [\n    'color',\n    'borderColor',\n    'backgroundColor'\n];\nfunction applyAnimationsDefaults(defaults) {\n    defaults.set('animation', {\n        delay: undefined,\n        duration: 1000,\n        easing: 'easeOutQuart',\n        fn: undefined,\n        from: undefined,\n        loop: undefined,\n        to: undefined,\n        type: undefined\n    });\n    defaults.describe('animation', {\n        _fallback: false,\n        _indexable: false,\n        _scriptable: (name)=>name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n    });\n    defaults.set('animations', {\n        colors: {\n            type: 'color',\n            properties: colors\n        },\n        numbers: {\n            type: 'number',\n            properties: numbers\n        }\n    });\n    defaults.describe('animations', {\n        _fallback: 'animation'\n    });\n    defaults.set('transitions', {\n        active: {\n            animation: {\n                duration: 400\n            }\n        },\n        resize: {\n            animation: {\n                duration: 0\n            }\n        },\n        show: {\n            animations: {\n                colors: {\n                    from: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    duration: 0\n                }\n            }\n        },\n        hide: {\n            animations: {\n                colors: {\n                    to: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    easing: 'linear',\n                    fn: (v)=>v | 0\n                }\n            }\n        }\n    });\n}\n\nfunction applyLayoutsDefaults(defaults) {\n    defaults.set('layout', {\n        autoPadding: true,\n        padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n        }\n    });\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n    options = options || {};\n    const cacheKey = locale + JSON.stringify(options);\n    let formatter = intlCache.get(cacheKey);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(locale, options);\n        intlCache.set(cacheKey, formatter);\n    }\n    return formatter;\n}\nfunction formatNumber(num, locale, options) {\n    return getNumberFormat(locale, options).format(num);\n}\n\nconst formatters = {\n values (value) {\n        return isArray(value) ?  (value) : '' + value;\n    },\n numeric (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const locale = this.chart.options.locale;\n        let notation;\n        let delta = tickValue;\n        if (ticks.length > 1) {\n            const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n            if (maxTick < 1e-4 || maxTick > 1e+15) {\n                notation = 'scientific';\n            }\n            delta = calculateDelta(tickValue, ticks);\n        }\n        const logDelta = log10(Math.abs(delta));\n        const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n        const options = {\n            notation,\n            minimumFractionDigits: numDecimal,\n            maximumFractionDigits: numDecimal\n        };\n        Object.assign(options, this.options.ticks.format);\n        return formatNumber(tickValue, locale, options);\n    },\n logarithmic (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const remain = ticks[index].significand || tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n        if ([\n            1,\n            2,\n            3,\n            5,\n            10,\n            15\n        ].includes(remain) || index > 0.8 * ticks.length) {\n            return formatters.numeric.call(this, tickValue, index, ticks);\n        }\n        return '';\n    }\n};\nfunction calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n        delta = tickValue - Math.floor(tickValue);\n    }\n    return delta;\n}\n var Ticks = {\n    formatters\n};\n\nfunction applyScaleDefaults(defaults) {\n    defaults.set('scale', {\n        display: true,\n        offset: false,\n        reverse: false,\n        beginAtZero: false,\n bounds: 'ticks',\n grace: 0,\n        grid: {\n            display: true,\n            lineWidth: 1,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickLength: 8,\n            tickWidth: (_ctx, options)=>options.lineWidth,\n            tickColor: (_ctx, options)=>options.color,\n            offset: false\n        },\n        border: {\n            display: true,\n            dash: [],\n            dashOffset: 0.0,\n            width: 1\n        },\n        title: {\n            display: false,\n            text: '',\n            padding: {\n                top: 4,\n                bottom: 4\n            }\n        },\n        ticks: {\n            minRotation: 0,\n            maxRotation: 50,\n            mirror: false,\n            textStrokeWidth: 0,\n            textStrokeColor: '',\n            padding: 3,\n            display: true,\n            autoSkip: true,\n            autoSkipPadding: 3,\n            labelOffset: 0,\n            callback: Ticks.formatters.values,\n            minor: {},\n            major: {},\n            align: 'center',\n            crossAlign: 'near',\n            showLabelBackdrop: false,\n            backdropColor: 'rgba(255, 255, 255, 0.75)',\n            backdropPadding: 2\n        }\n    });\n    defaults.route('scale.ticks', 'color', '', 'color');\n    defaults.route('scale.grid', 'color', '', 'borderColor');\n    defaults.route('scale.border', 'color', '', 'borderColor');\n    defaults.route('scale.title', 'color', '', 'color');\n    defaults.describe('scale', {\n        _fallback: false,\n        _scriptable: (name)=>!name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n        _indexable: (name)=>name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash'\n    });\n    defaults.describe('scales', {\n        _fallback: 'scale'\n    });\n    defaults.describe('scale.ticks', {\n        _scriptable: (name)=>name !== 'backdropPadding' && name !== 'callback',\n        _indexable: (name)=>name !== 'backdropPadding'\n    });\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\n function getScope$1(node, key) {\n    if (!key) {\n        return node;\n    }\n    const keys = key.split('.');\n    for(let i = 0, n = keys.length; i < n; ++i){\n        const k = keys[i];\n        node = node[k] || (node[k] = Object.create(null));\n    }\n    return node;\n}\nfunction set(root, scope, values) {\n    if (typeof scope === 'string') {\n        return merge(getScope$1(root, scope), values);\n    }\n    return merge(getScope$1(root, ''), scope);\n}\n class Defaults {\n    constructor(_descriptors, _appliers){\n        this.animation = undefined;\n        this.backgroundColor = 'rgba(0,0,0,0.1)';\n        this.borderColor = 'rgba(0,0,0,0.1)';\n        this.color = '#666';\n        this.datasets = {};\n        this.devicePixelRatio = (context)=>context.chart.platform.getDevicePixelRatio();\n        this.elements = {};\n        this.events = [\n            'mousemove',\n            'mouseout',\n            'click',\n            'touchstart',\n            'touchmove'\n        ];\n        this.font = {\n            family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n            size: 12,\n            style: 'normal',\n            lineHeight: 1.2,\n            weight: null\n        };\n        this.hover = {};\n        this.hoverBackgroundColor = (ctx, options)=>getHoverColor(options.backgroundColor);\n        this.hoverBorderColor = (ctx, options)=>getHoverColor(options.borderColor);\n        this.hoverColor = (ctx, options)=>getHoverColor(options.color);\n        this.indexAxis = 'x';\n        this.interaction = {\n            mode: 'nearest',\n            intersect: true,\n            includeInvisible: false\n        };\n        this.maintainAspectRatio = true;\n        this.onHover = null;\n        this.onClick = null;\n        this.parsing = true;\n        this.plugins = {};\n        this.responsive = true;\n        this.scale = undefined;\n        this.scales = {};\n        this.showLine = true;\n        this.drawActiveElementsOnTop = true;\n        this.describe(_descriptors);\n        this.apply(_appliers);\n    }\n set(scope, values) {\n        return set(this, scope, values);\n    }\n get(scope) {\n        return getScope$1(this, scope);\n    }\n describe(scope, values) {\n        return set(descriptors, scope, values);\n    }\n    override(scope, values) {\n        return set(overrides, scope, values);\n    }\n route(scope, name, targetScope, targetName) {\n        const scopeObject = getScope$1(this, scope);\n        const targetScopeObject = getScope$1(this, targetScope);\n        const privateName = '_' + name;\n        Object.defineProperties(scopeObject, {\n            [privateName]: {\n                value: scopeObject[name],\n                writable: true\n            },\n            [name]: {\n                enumerable: true,\n                get () {\n                    const local = this[privateName];\n                    const target = targetScopeObject[targetName];\n                    if (isObject(local)) {\n                        return Object.assign({}, target, local);\n                    }\n                    return valueOrDefault(local, target);\n                },\n                set (value) {\n                    this[privateName] = value;\n                }\n            }\n        });\n    }\n    apply(appliers) {\n        appliers.forEach((apply)=>apply(this));\n    }\n}\nvar defaults = /* #__PURE__ */ new Defaults({\n    _scriptable: (name)=>!name.startsWith('on'),\n    _indexable: (name)=>name !== 'events',\n    hover: {\n        _fallback: 'interaction'\n    },\n    interaction: {\n        _scriptable: false,\n        _indexable: false\n    }\n}, [\n    applyAnimationsDefaults,\n    applyLayoutsDefaults,\n    applyScaleDefaults\n]);\n\nfunction toFontString(font) {\n    if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n        return null;\n    }\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n}\n function _measureText(ctx, data, gc, longest, string) {\n    let textWidth = data[string];\n    if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n    }\n    if (textWidth > longest) {\n        longest = textWidth;\n    }\n    return longest;\n}\n function _longestText(ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    let data = cache.data = cache.data || {};\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\n    if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n    }\n    ctx.save();\n    ctx.font = font;\n    let longest = 0;\n    const ilen = arrayOfThings.length;\n    let i, j, jlen, thing, nestedThing;\n    for(i = 0; i < ilen; i++){\n        thing = arrayOfThings[i];\n        if (thing !== undefined && thing !== null && isArray(thing) !== true) {\n            longest = _measureText(ctx, data, gc, longest, thing);\n        } else if (isArray(thing)) {\n            for(j = 0, jlen = thing.length; j < jlen; j++){\n                nestedThing = thing[j];\n                if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n                    longest = _measureText(ctx, data, gc, longest, nestedThing);\n                }\n            }\n        }\n    }\n    ctx.restore();\n    const gcLen = gc.length / 2;\n    if (gcLen > arrayOfThings.length) {\n        for(i = 0; i < gcLen; i++){\n            delete data[gc[i]];\n        }\n        gc.splice(0, gcLen);\n    }\n    return longest;\n}\n function _alignPixel(chart, pixel, width) {\n    const devicePixelRatio = chart.currentDevicePixelRatio;\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n function clearCanvas(canvas, ctx) {\n    ctx = ctx || canvas.getContext('2d');\n    ctx.save();\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n    drawPointLegend(ctx, options, x, y, null);\n}\nfunction drawPointLegend(ctx, options, x, y, w) {\n    let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    const radius = options.radius;\n    let rad = (rotation || 0) * RAD_PER_DEG;\n    if (style && typeof style === 'object') {\n        type = style.toString();\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.rotate(rad);\n            ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n            ctx.restore();\n            return;\n        }\n    }\n    if (isNaN(radius) || radius <= 0) {\n        return;\n    }\n    ctx.beginPath();\n    switch(style){\n        default:\n            if (w) {\n                ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n            } else {\n                ctx.arc(x, y, radius, 0, TAU);\n            }\n            ctx.closePath();\n            break;\n        case 'triangle':\n            width = w ? w / 2 : radius;\n            ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            ctx.closePath();\n            break;\n        case 'rectRounded':\n            cornerRadius = radius * 0.516;\n            size = radius - cornerRadius;\n            xOffset = Math.cos(rad + QUARTER_PI) * size;\n            xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            yOffset = Math.sin(rad + QUARTER_PI) * size;\n            yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n            ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n            ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n            ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n            ctx.closePath();\n            break;\n        case 'rect':\n            if (!rotation) {\n                size = Math.SQRT1_2 * radius;\n                width = w ? w / 2 : size;\n                ctx.rect(x - width, y - size, 2 * width, 2 * size);\n                break;\n            }\n            rad += QUARTER_PI;\n         case 'rectRot':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            ctx.closePath();\n            break;\n        case 'crossRot':\n            rad += QUARTER_PI;\n         case 'cross':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'star':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            rad += QUARTER_PI;\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'line':\n            xOffset = w ? w / 2 : Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            break;\n        case 'dash':\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n            break;\n    }\n    ctx.fill();\n    if (options.borderWidth > 0) {\n        ctx.stroke();\n    }\n}\n function _isPointInArea(point, area, margin) {\n    margin = margin || 0.5;\n    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n}\nfunction unclipArea(ctx) {\n    ctx.restore();\n}\n function _steppedLineTo(ctx, previous, target, flip, mode) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    if (mode === 'middle') {\n        const midpoint = (previous.x + target.x) / 2.0;\n        ctx.lineTo(midpoint, previous.y);\n        ctx.lineTo(midpoint, target.y);\n    } else if (mode === 'after' !== !!flip) {\n        ctx.lineTo(previous.x, target.y);\n    } else {\n        ctx.lineTo(target.x, previous.y);\n    }\n    ctx.lineTo(target.x, target.y);\n}\n function _bezierCurveTo(ctx, previous, target, flip) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n}\n function renderText(ctx, text, x, y, font, opts = {}) {\n    const lines = isArray(text) ? text : [\n        text\n    ];\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n    let i, line;\n    ctx.save();\n    ctx.font = font.string;\n    setRenderOpts(ctx, opts);\n    for(i = 0; i < lines.length; ++i){\n        line = lines[i];\n        if (opts.backdrop) {\n            drawBackdrop(ctx, opts.backdrop);\n        }\n        if (stroke) {\n            if (opts.strokeColor) {\n                ctx.strokeStyle = opts.strokeColor;\n            }\n            if (!isNullOrUndef(opts.strokeWidth)) {\n                ctx.lineWidth = opts.strokeWidth;\n            }\n            ctx.strokeText(line, x, y, opts.maxWidth);\n        }\n        ctx.fillText(line, x, y, opts.maxWidth);\n        decorateText(ctx, x, y, line, opts);\n        y += font.lineHeight;\n    }\n    ctx.restore();\n}\nfunction setRenderOpts(ctx, opts) {\n    if (opts.translation) {\n        ctx.translate(opts.translation[0], opts.translation[1]);\n    }\n    if (!isNullOrUndef(opts.rotation)) {\n        ctx.rotate(opts.rotation);\n    }\n    if (opts.color) {\n        ctx.fillStyle = opts.color;\n    }\n    if (opts.textAlign) {\n        ctx.textAlign = opts.textAlign;\n    }\n    if (opts.textBaseline) {\n        ctx.textBaseline = opts.textBaseline;\n    }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n    if (opts.strikethrough || opts.underline) {\n const metrics = ctx.measureText(line);\n        const left = x - metrics.actualBoundingBoxLeft;\n        const right = x + metrics.actualBoundingBoxRight;\n        const top = y - metrics.actualBoundingBoxAscent;\n        const bottom = y + metrics.actualBoundingBoxDescent;\n        const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n        ctx.strokeStyle = ctx.fillStyle;\n        ctx.beginPath();\n        ctx.lineWidth = opts.decorationWidth || 2;\n        ctx.moveTo(left, yDecoration);\n        ctx.lineTo(right, yDecoration);\n        ctx.stroke();\n    }\n}\nfunction drawBackdrop(ctx, opts) {\n    const oldColor = ctx.fillStyle;\n    ctx.fillStyle = opts.color;\n    ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n    ctx.fillStyle = oldColor;\n}\n function addRoundedRectPath(ctx, rect) {\n    const { x , y , w , h , radius  } = rect;\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n    ctx.lineTo(x, y + h - radius.bottomLeft);\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n    ctx.lineTo(x + w, y + radius.topRight);\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n    ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n/**\n * @alias Chart.helpers.options\n * @namespace\n */ /**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */ function toLineHeight(value, size) {\n    const matches = ('' + value).match(LINE_HEIGHT);\n    if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n    }\n    value = +matches[2];\n    switch(matches[3]){\n        case 'px':\n            return value;\n        case '%':\n            value /= 100;\n            break;\n    }\n    return size * value;\n}\nconst numberOrZero = (v)=>+v || 0;\nfunction _readValueToProps(value, props) {\n    const ret = {};\n    const objProps = isObject(props);\n    const keys = objProps ? Object.keys(props) : props;\n    const read = isObject(value) ? objProps ? (prop)=>valueOrDefault(value[prop], value[props[prop]]) : (prop)=>value[prop] : ()=>value;\n    for (const prop of keys){\n        ret[prop] = numberOrZero(read(prop));\n    }\n    return ret;\n}\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */ function toTRBL(value) {\n    return _readValueToProps(value, {\n        top: 'y',\n        right: 'x',\n        bottom: 'y',\n        left: 'x'\n    });\n}\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */ function toTRBLCorners(value) {\n    return _readValueToProps(value, [\n        'topLeft',\n        'topRight',\n        'bottomLeft',\n        'bottomRight'\n    ]);\n}\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */ function toPadding(value) {\n    const obj = toTRBL(value);\n    obj.width = obj.left + obj.right;\n    obj.height = obj.top + obj.bottom;\n    return obj;\n}\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */ function toFont(options, fallback) {\n    options = options || {};\n    fallback = fallback || defaults.font;\n    let size = valueOrDefault(options.size, fallback.size);\n    if (typeof size === 'string') {\n        size = parseInt(size, 10);\n    }\n    let style = valueOrDefault(options.style, fallback.style);\n    if (style && !('' + style).match(FONT_STYLE)) {\n        console.warn('Invalid font style specified: \"' + style + '\"');\n        style = undefined;\n    }\n    const font = {\n        family: valueOrDefault(options.family, fallback.family),\n        lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n        size,\n        style,\n        weight: valueOrDefault(options.weight, fallback.weight),\n        string: ''\n    };\n    font.string = toFontString(font);\n    return font;\n}\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */ function resolve(inputs, context, index, info) {\n    let cacheable = true;\n    let i, ilen, value;\n    for(i = 0, ilen = inputs.length; i < ilen; ++i){\n        value = inputs[i];\n        if (value === undefined) {\n            continue;\n        }\n        if (context !== undefined && typeof value === 'function') {\n            value = value(context);\n            cacheable = false;\n        }\n        if (index !== undefined && isArray(value)) {\n            value = value[index % value.length];\n            cacheable = false;\n        }\n        if (value !== undefined) {\n            if (info && !cacheable) {\n                info.cacheable = false;\n            }\n            return value;\n        }\n    }\n}\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */ function _addGrace(minmax, grace, beginAtZero) {\n    const { min , max  } = minmax;\n    const change = toDimension(grace, (max - min) / 2);\n    const keepZero = (value, add)=>beginAtZero && value === 0 ? 0 : value + add;\n    return {\n        min: keepZero(min, -Math.abs(change)),\n        max: keepZero(max, change)\n    };\n}\n/**\n * Create a context inheriting parentContext\n * @param parentContext\n * @param context\n * @returns\n */ function createContext(parentContext, context) {\n    return Object.assign(Object.create(parentContext), context);\n}\n\nfunction _createResolver(scopes, prefixes = [\n    ''\n], rootScopes = scopes, fallback, getTarget = ()=>scopes[0]) {\n    if (!defined(fallback)) {\n        fallback = _resolve('_fallback', scopes);\n    }\n    const cache = {\n        [Symbol.toStringTag]: 'Object',\n        _cacheable: true,\n        _scopes: scopes,\n        _rootScopes: rootScopes,\n        _fallback: fallback,\n        _getTarget: getTarget,\n        override: (scope)=>_createResolver([\n                scope,\n                ...scopes\n            ], prefixes, rootScopes, fallback)\n    };\n    return new Proxy(cache, {\n deleteProperty (target, prop) {\n            delete target[prop];\n            delete target._keys;\n            delete scopes[0][prop];\n            return true;\n        },\n get (target, prop) {\n            return _cached(target, prop, ()=>_resolveWithPrefixes(prop, prefixes, scopes, target));\n        },\n getOwnPropertyDescriptor (target, prop) {\n            return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n        },\n getPrototypeOf () {\n            return Reflect.getPrototypeOf(scopes[0]);\n        },\n has (target, prop) {\n            return getKeysFromAllScopes(target).includes(prop);\n        },\n ownKeys (target) {\n            return getKeysFromAllScopes(target);\n        },\n set (target, prop, value) {\n            const storage = target._storage || (target._storage = getTarget());\n            target[prop] = storage[prop] = value;\n            delete target._keys;\n            return true;\n        }\n    });\n}\n function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n    const cache = {\n        _cacheable: false,\n        _proxy: proxy,\n        _context: context,\n        _subProxy: subProxy,\n        _stack: new Set(),\n        _descriptors: _descriptors(proxy, descriptorDefaults),\n        setContext: (ctx)=>_attachContext(proxy, ctx, subProxy, descriptorDefaults),\n        override: (scope)=>_attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n    };\n    return new Proxy(cache, {\n deleteProperty (target, prop) {\n            delete target[prop];\n            delete proxy[prop];\n            return true;\n        },\n get (target, prop, receiver) {\n            return _cached(target, prop, ()=>_resolveWithContext(target, prop, receiver));\n        },\n getOwnPropertyDescriptor (target, prop) {\n            return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n                enumerable: true,\n                configurable: true\n            } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n        },\n getPrototypeOf () {\n            return Reflect.getPrototypeOf(proxy);\n        },\n has (target, prop) {\n            return Reflect.has(proxy, prop);\n        },\n ownKeys () {\n            return Reflect.ownKeys(proxy);\n        },\n set (target, prop, value) {\n            proxy[prop] = value;\n            delete target[prop];\n            return true;\n        }\n    });\n}\n function _descriptors(proxy, defaults = {\n    scriptable: true,\n    indexable: true\n}) {\n    const { _scriptable =defaults.scriptable , _indexable =defaults.indexable , _allKeys =defaults.allKeys  } = proxy;\n    return {\n        allKeys: _allKeys,\n        scriptable: _scriptable,\n        indexable: _indexable,\n        isScriptable: isFunction(_scriptable) ? _scriptable : ()=>_scriptable,\n        isIndexable: isFunction(_indexable) ? _indexable : ()=>_indexable\n    };\n}\nconst readKey = (prefix, name)=>prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value)=>isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n    if (Object.prototype.hasOwnProperty.call(target, prop)) {\n        return target[prop];\n    }\n    const value = resolve();\n    target[prop] = value;\n    return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    let value = _proxy[prop];\n    if (isFunction(value) && descriptors.isScriptable(prop)) {\n        value = _resolveScriptable(prop, value, target, receiver);\n    }\n    if (isArray(value) && value.length) {\n        value = _resolveArray(prop, value, target, descriptors.isIndexable);\n    }\n    if (needsSubResolver(prop, value)) {\n        value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n    }\n    return value;\n}\nfunction _resolveScriptable(prop, value, target, receiver) {\n    const { _proxy , _context , _subProxy , _stack  } = target;\n    if (_stack.has(prop)) {\n        throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n    }\n    _stack.add(prop);\n    value = value(_context, _subProxy || receiver);\n    _stack.delete(prop);\n    if (needsSubResolver(prop, value)) {\n        value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n    }\n    return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    if (defined(_context.index) && isIndexable(prop)) {\n        value = value[_context.index % value.length];\n    } else if (isObject(value[0])) {\n        const arr = value;\n        const scopes = _proxy._scopes.filter((s)=>s !== arr);\n        value = [];\n        for (const item of arr){\n            const resolver = createSubResolver(scopes, _proxy, prop, item);\n            value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n        }\n    }\n    return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n    return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent)=>key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n    for (const parent of parentScopes){\n        const scope = getScope(key, parent);\n        if (scope) {\n            set.add(scope);\n            const fallback = resolveFallback(scope._fallback, key, value);\n            if (defined(fallback) && fallback !== key && fallback !== parentFallback) {\n                return fallback;\n            }\n        } else if (scope === false && defined(parentFallback) && key !== parentFallback) {\n            return null;\n        }\n    }\n    return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n    const rootScopes = resolver._rootScopes;\n    const fallback = resolveFallback(resolver._fallback, prop, value);\n    const allScopes = [\n        ...parentScopes,\n        ...rootScopes\n    ];\n    const set = new Set();\n    set.add(value);\n    let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n    if (key === null) {\n        return false;\n    }\n    if (defined(fallback) && fallback !== prop) {\n        key = addScopesFromKey(set, allScopes, fallback, key, value);\n        if (key === null) {\n            return false;\n        }\n    }\n    return _createResolver(Array.from(set), [\n        ''\n    ], rootScopes, fallback, ()=>subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n    while(key){\n        key = addScopes(set, allScopes, key, fallback, item);\n    }\n    return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) {\n        parent[prop] = {};\n    }\n    const target = parent[prop];\n    if (isArray(target) && isObject(value)) {\n        return value;\n    }\n    return target || {};\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n    let value;\n    for (const prefix of prefixes){\n        value = _resolve(readKey(prefix, prop), scopes);\n        if (defined(value)) {\n            return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n        }\n    }\n}\nfunction _resolve(key, scopes) {\n    for (const scope of scopes){\n        if (!scope) {\n            continue;\n        }\n        const value = scope[key];\n        if (defined(value)) {\n            return value;\n        }\n    }\n}\nfunction getKeysFromAllScopes(target) {\n    let keys = target._keys;\n    if (!keys) {\n        keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n    }\n    return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n    const set = new Set();\n    for (const scope of scopes){\n        for (const key of Object.keys(scope).filter((k)=>!k.startsWith('_'))){\n            set.add(key);\n        }\n    }\n    return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n    const { iScale  } = meta;\n    const { key ='r'  } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for(i = 0, ilen = count; i < ilen; ++i){\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n            r: iScale.parse(resolveObjectKey(item, key), index)\n        };\n    }\n    return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i)=>i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis)=>indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\n    const current = middlePoint;\n    const next = afterPoint.skip ? middlePoint : afterPoint;\n    const d01 = distanceBetweenPoints(current, previous);\n    const d12 = distanceBetweenPoints(next, current);\n    let s01 = d01 / (d01 + d12);\n    let s12 = d12 / (d01 + d12);\n    // If all points are the same, s01 & s02 will be inf\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    const fa = t * s01; // scaling factor for triangle Ta\n    const fb = t * s12;\n    return {\n        previous: {\n            x: current.x - fa * (next.x - previous.x),\n            y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n            x: current.x + fb * (next.x - previous.x),\n            y: current.y + fb * (next.y - previous.y)\n        }\n    };\n}\n/**\n * Adjust tangents to ensure monotonic properties\n */ function monotoneAdjust(points, deltaK, mK) {\n    const pointsLen = points.length;\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen - 1; ++i){\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent || !pointAfter) {\n            continue;\n        }\n        if (almostEquals(deltaK[i], 0, EPSILON)) {\n            mK[i] = mK[i + 1] = 0;\n            continue;\n        }\n        alphaK = mK[i] / deltaK[i];\n        betaK = mK[i + 1] / deltaK[i];\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n        if (squaredMagnitude <= 9) {\n            continue;\n        }\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        mK[i] = alphaK * tauK * deltaK[i];\n        mK[i + 1] = betaK * tauK * deltaK[i];\n    }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    let delta, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        const iPixel = pointCurrent[indexAxis];\n        const vPixel = pointCurrent[valueAxis];\n        if (pointBefore) {\n            delta = (iPixel - pointBefore[indexAxis]) / 3;\n            pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n            pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n        }\n        if (pointAfter) {\n            delta = (pointAfter[indexAxis] - iPixel) / 3;\n            pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n            pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n        }\n    }\n}\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */ function splineCurveMonotone(points, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    const deltaK = Array(pointsLen).fill(0);\n    const mK = Array(pointsLen);\n    // Calculate slopes (deltaK) and initialize tangents (mK)\n    let i, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        if (pointAfter) {\n            const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n            deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n        }\n        mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n    }\n    monotoneAdjust(points, deltaK, mK);\n    monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n    return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n    let i, ilen, point, inArea, inAreaPrev;\n    let inAreaNext = _isPointInArea(points[0], area);\n    for(i = 0, ilen = points.length; i < ilen; ++i){\n        inAreaPrev = inArea;\n        inArea = inAreaNext;\n        inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n        if (!inArea) {\n            continue;\n        }\n        point = points[i];\n        if (inAreaPrev) {\n            point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n            point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n        }\n        if (inAreaNext) {\n            point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n            point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n        }\n    }\n}\n/**\n * @private\n */ function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n    let i, ilen, point, controlPoints;\n    // Only consider points that are drawn in case the spanGaps option is used\n    if (options.spanGaps) {\n        points = points.filter((pt)=>!pt.skip);\n    }\n    if (options.cubicInterpolationMode === 'monotone') {\n        splineCurveMonotone(points, indexAxis);\n    } else {\n        let prev = loop ? points[points.length - 1] : points[0];\n        for(i = 0, ilen = points.length; i < ilen; ++i){\n            point = points[i];\n            controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n            point.cp1x = controlPoints.previous.x;\n            point.cp1y = controlPoints.previous.y;\n            point.cp2x = controlPoints.next.x;\n            point.cp2y = controlPoints.next.y;\n            prev = point;\n        }\n    }\n    if (options.capBezierPoints) {\n        capBezierPoints(points, area);\n    }\n}\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import(\"../core/core.controller\").default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */ /**\n * @private\n */ function _isDomSupported() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n/**\n * @private\n */ function _getParentNode(domNode) {\n    let parent = domNode.parentNode;\n    if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n    }\n    return parent;\n}\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */ function parseMaxStyle(styleValue, node, parentProperty) {\n    let valueInPixels;\n    if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n        if (styleValue.indexOf('%') !== -1) {\n            // percentage * size in dimension\n            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n    } else {\n        valueInPixels = styleValue;\n    }\n    return valueInPixels;\n}\nconst getComputedStyle = (element)=>element.ownerDocument.defaultView.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n    return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = [\n    'top',\n    'right',\n    'bottom',\n    'left'\n];\nfunction getPositionedStyle(styles, style, suffix) {\n    const result = {};\n    suffix = suffix ? '-' + suffix : '';\n    for(let i = 0; i < 4; i++){\n        const pos = positions[i];\n        result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n    }\n    result.width = result.left + result.right;\n    result.height = result.top + result.bottom;\n    return result;\n}\nconst useOffsetPos = (x, y, target)=>(x > 0 || y > 0) && (!target || !target.shadowRoot);\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */ function getCanvasPosition(e, canvas) {\n    const touches = e.touches;\n    const source = touches && touches.length ? touches[0] : e;\n    const { offsetX , offsetY  } = source;\n    let box = false;\n    let x, y;\n    if (useOffsetPos(offsetX, offsetY, e.target)) {\n        x = offsetX;\n        y = offsetY;\n    } else {\n        const rect = canvas.getBoundingClientRect();\n        x = source.clientX - rect.left;\n        y = source.clientY - rect.top;\n        box = true;\n    }\n    return {\n        x,\n        y,\n        box\n    };\n}\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */ function getRelativePosition(event, chart) {\n    if ('native' in event) {\n        return event;\n    }\n    const { canvas , currentDevicePixelRatio  } = chart;\n    const style = getComputedStyle(canvas);\n    const borderBox = style.boxSizing === 'border-box';\n    const paddings = getPositionedStyle(style, 'padding');\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const { x , y , box  } = getCanvasPosition(event, canvas);\n    const xOffset = paddings.left + (box && borders.left);\n    const yOffset = paddings.top + (box && borders.top);\n    let { width , height  } = chart;\n    if (borderBox) {\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    return {\n        x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n        y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n    };\n}\nfunction getContainerSize(canvas, width, height) {\n    let maxWidth, maxHeight;\n    if (width === undefined || height === undefined) {\n        const container = _getParentNode(canvas);\n        if (!container) {\n            width = canvas.clientWidth;\n            height = canvas.clientHeight;\n        } else {\n            const rect = container.getBoundingClientRect(); // this is the border box of the container\n            const containerStyle = getComputedStyle(container);\n            const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n            const containerPadding = getPositionedStyle(containerStyle, 'padding');\n            width = rect.width - containerPadding.width - containerBorder.width;\n            height = rect.height - containerPadding.height - containerBorder.height;\n            maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n            maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n        }\n    }\n    return {\n        width,\n        height,\n        maxWidth: maxWidth || INFINITY,\n        maxHeight: maxHeight || INFINITY\n    };\n}\nconst round1 = (v)=>Math.round(v * 10) / 10;\n// eslint-disable-next-line complexity\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n    const style = getComputedStyle(canvas);\n    const margins = getPositionedStyle(style, 'margin');\n    const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n    const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n    const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n    let { width , height  } = containerSize;\n    if (style.boxSizing === 'content-box') {\n        const borders = getPositionedStyle(style, 'border', 'width');\n        const paddings = getPositionedStyle(style, 'padding');\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    width = Math.max(0, width - margins.width);\n    height = Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height - margins.height);\n    width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n    height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n    if (width && !height) {\n        // https://github.com/chartjs/Chart.js/issues/4659\n        // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n        height = round1(width / 2);\n    }\n    const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n    if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n        height = containerSize.height;\n        width = round1(Math.floor(height * aspectRatio));\n    }\n    return {\n        width,\n        height\n    };\n}\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */ function retinaScale(chart, forceRatio, forceStyle) {\n    const pixelRatio = forceRatio || 1;\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\n    chart.height = deviceHeight / pixelRatio;\n    chart.width = deviceWidth / pixelRatio;\n    const canvas = chart.canvas;\n    // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n        canvas.style.height = `${chart.height}px`;\n        canvas.style.width = `${chart.width}px`;\n    }\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n        chart.currentDevicePixelRatio = pixelRatio;\n        canvas.height = deviceHeight;\n        canvas.width = deviceWidth;\n        chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        return true;\n    }\n    return false;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */ const supportsEventListenerOptions = function() {\n    let passiveSupported = false;\n    try {\n        const options = {\n            get passive () {\n                passiveSupported = true;\n                return false;\n            }\n        };\n        window.addEventListener('test', null, options);\n        window.removeEventListener('test', null, options);\n    } catch (e) {\n    // continue regardless of error\n    }\n    return passiveSupported;\n}();\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */ function readUsedSize(element, property) {\n    const value = getStyle(element, property);\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? +matches[1] : undefined;\n}\n\n/**\n * @private\n */ function _pointInLine(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: p1.y + t * (p2.y - p1.y)\n    };\n}\n/**\n * @private\n */ function _steppedInterpolation(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n    };\n}\n/**\n * @private\n */ function _bezierInterpolation(p1, p2, t, mode) {\n    const cp1 = {\n        x: p1.cp2x,\n        y: p1.cp2y\n    };\n    const cp2 = {\n        x: p2.cp1x,\n        y: p2.cp1y\n    };\n    const a = _pointInLine(p1, cp1, t);\n    const b = _pointInLine(cp1, cp2, t);\n    const c = _pointInLine(cp2, p2, t);\n    const d = _pointInLine(a, b, t);\n    const e = _pointInLine(b, c, t);\n    return _pointInLine(d, e, t);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n    return {\n        x (x) {\n            return rectX + rectX + width - x;\n        },\n        setWidth (w) {\n            width = w;\n        },\n        textAlign (align) {\n            if (align === 'center') {\n                return align;\n            }\n            return align === 'right' ? 'left' : 'right';\n        },\n        xPlus (x, value) {\n            return x - value;\n        },\n        leftForLtr (x, itemWidth) {\n            return x - itemWidth;\n        }\n    };\n};\nconst getLeftToRightAdapter = function() {\n    return {\n        x (x) {\n            return x;\n        },\n        setWidth (w) {},\n        textAlign (align) {\n            return align;\n        },\n        xPlus (x, value) {\n            return x + value;\n        },\n        leftForLtr (x, _itemWidth) {\n            return x;\n        }\n    };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n    return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n    let style, original;\n    if (direction === 'ltr' || direction === 'rtl') {\n        style = ctx.canvas.style;\n        original = [\n            style.getPropertyValue('direction'),\n            style.getPropertyPriority('direction'), \n        ];\n        style.setProperty('direction', direction, 'important');\n        ctx.prevTextDirection = original;\n    }\n}\nfunction restoreTextDirection(ctx, original) {\n    if (original !== undefined) {\n        delete ctx.prevTextDirection;\n        ctx.canvas.style.setProperty('direction', original[0], original[1]);\n    }\n}\n\nfunction propertyFn(property) {\n    if (property === 'angle') {\n        return {\n            between: _angleBetween,\n            compare: _angleDiff,\n            normalize: _normalizeAngle\n        };\n    }\n    return {\n        between: _isBetween,\n        compare: (a, b)=>a - b,\n        normalize: (x)=>x\n    };\n}\nfunction normalizeSegment({ start , end , count , loop , style  }) {\n    return {\n        start: start % count,\n        end: end % count,\n        loop: loop && (end - start + 1) % count === 0,\n        style\n    };\n}\nfunction getSegment(segment, points, bounds) {\n    const { property , start: startBound , end: endBound  } = bounds;\n    const { between , normalize  } = propertyFn(property);\n    const count = points.length;\n    let { start , end , loop  } = segment;\n    let i, ilen;\n    if (loop) {\n        start += count;\n        end += count;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n                break;\n            }\n            start--;\n            end--;\n        }\n        start %= count;\n        end %= count;\n    }\n    if (end < start) {\n        end += count;\n    }\n    return {\n        start,\n        end,\n        loop,\n        style: segment.style\n    };\n}\n function _boundSegment(segment, points, bounds) {\n    if (!bounds) {\n        return [\n            segment\n        ];\n    }\n    const { property , start: startBound , end: endBound  } = bounds;\n    const count = points.length;\n    const { compare , between , normalize  } = propertyFn(property);\n    const { start , end , loop , style  } = getSegment(segment, points, bounds);\n    const result = [];\n    let inside = false;\n    let subStart = null;\n    let value, point, prevValue;\n    const startIsBefore = ()=>between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n    const endIsBefore = ()=>compare(endBound, value) === 0 || between(endBound, prevValue, value);\n    const shouldStart = ()=>inside || startIsBefore();\n    const shouldStop = ()=>!inside || endIsBefore();\n    for(let i = start, prev = start; i <= end; ++i){\n        point = points[i % count];\n        if (point.skip) {\n            continue;\n        }\n        value = normalize(point[property]);\n        if (value === prevValue) {\n            continue;\n        }\n        inside = between(value, startBound, endBound);\n        if (subStart === null && shouldStart()) {\n            subStart = compare(value, startBound) === 0 ? i : prev;\n        }\n        if (subStart !== null && shouldStop()) {\n            result.push(normalizeSegment({\n                start: subStart,\n                end: i,\n                loop,\n                count,\n                style\n            }));\n            subStart = null;\n        }\n        prev = i;\n        prevValue = value;\n    }\n    if (subStart !== null) {\n        result.push(normalizeSegment({\n            start: subStart,\n            end,\n            loop,\n            count,\n            style\n        }));\n    }\n    return result;\n}\n function _boundSegments(line, bounds) {\n    const result = [];\n    const segments = line.segments;\n    for(let i = 0; i < segments.length; i++){\n        const sub = _boundSegment(segments[i], line.points, bounds);\n        if (sub.length) {\n            result.push(...sub);\n        }\n    }\n    return result;\n}\n function findStartAndEnd(points, count, loop, spanGaps) {\n    let start = 0;\n    let end = count - 1;\n    if (loop && !spanGaps) {\n        while(start < count && !points[start].skip){\n            start++;\n        }\n    }\n    while(start < count && points[start].skip){\n        start++;\n    }\n    start %= count;\n    if (loop) {\n        end += start;\n    }\n    while(end > start && points[end % count].skip){\n        end--;\n    }\n    end %= count;\n    return {\n        start,\n        end\n    };\n}\n function solidSegments(points, start, max, loop) {\n    const count = points.length;\n    const result = [];\n    let last = start;\n    let prev = points[start];\n    let end;\n    for(end = start + 1; end <= max; ++end){\n        const cur = points[end % count];\n        if (cur.skip || cur.stop) {\n            if (!prev.skip) {\n                loop = false;\n                result.push({\n                    start: start % count,\n                    end: (end - 1) % count,\n                    loop\n                });\n                start = last = cur.stop ? end : null;\n            }\n        } else {\n            last = end;\n            if (prev.skip) {\n                start = end;\n            }\n        }\n        prev = cur;\n    }\n    if (last !== null) {\n        result.push({\n            start: start % count,\n            end: last % count,\n            loop\n        });\n    }\n    return result;\n}\n function _computeSegments(line, segmentOptions) {\n    const points = line.points;\n    const spanGaps = line.options.spanGaps;\n    const count = points.length;\n    if (!count) {\n        return [];\n    }\n    const loop = !!line._loop;\n    const { start , end  } = findStartAndEnd(points, count, loop, spanGaps);\n    if (spanGaps === true) {\n        return splitByStyles(line, [\n            {\n                start,\n                end,\n                loop\n            }\n        ], points, segmentOptions);\n    }\n    const max = end < start ? end + count : end;\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n    return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n function splitByStyles(line, segments, points, segmentOptions) {\n    if (!segmentOptions || !segmentOptions.setContext || !points) {\n        return segments;\n    }\n    return doSplitByStyles(line, segments, points, segmentOptions);\n}\n function doSplitByStyles(line, segments, points, segmentOptions) {\n    const chartContext = line._chart.getContext();\n    const baseStyle = readStyle(line.options);\n    const { _datasetIndex: datasetIndex , options: { spanGaps  }  } = line;\n    const count = points.length;\n    const result = [];\n    let prevStyle = baseStyle;\n    let start = segments[0].start;\n    let i = start;\n    function addStyle(s, e, l, st) {\n        const dir = spanGaps ? -1 : 1;\n        if (s === e) {\n            return;\n        }\n        s += count;\n        while(points[s % count].skip){\n            s -= dir;\n        }\n        while(points[e % count].skip){\n            e += dir;\n        }\n        if (s % count !== e % count) {\n            result.push({\n                start: s % count,\n                end: e % count,\n                loop: l,\n                style: st\n            });\n            prevStyle = st;\n            start = e % count;\n        }\n    }\n    for (const segment of segments){\n        start = spanGaps ? start : segment.start;\n        let prev = points[start % count];\n        let style;\n        for(i = start + 1; i <= segment.end; i++){\n            const pt = points[i % count];\n            style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n                type: 'segment',\n                p0: prev,\n                p1: pt,\n                p0DataIndex: (i - 1) % count,\n                p1DataIndex: i % count,\n                datasetIndex\n            })));\n            if (styleChanged(style, prevStyle)) {\n                addStyle(start, i - 1, segment.loop, prevStyle);\n            }\n            prev = pt;\n            prevStyle = style;\n        }\n        if (start < i - 1) {\n            addStyle(start, i - 1, segment.loop, prevStyle);\n        }\n    }\n    return result;\n}\nfunction readStyle(options) {\n    return {\n        backgroundColor: options.backgroundColor,\n        borderCapStyle: options.borderCapStyle,\n        borderDash: options.borderDash,\n        borderDashOffset: options.borderDashOffset,\n        borderJoinStyle: options.borderJoinStyle,\n        borderWidth: options.borderWidth,\n        borderColor: options.borderColor\n    };\n}\nfunction styleChanged(style, prevStyle) {\n    return prevStyle && JSON.stringify(style) !== JSON.stringify(prevStyle);\n}\n\nexport { unclipArea as $, _rlookupByKey as A, _lookupByKey as B, _isPointInArea as C, getAngleFromPoint as D, toPadding as E, each as F, getMaximumSize as G, HALF_PI as H, _getParentNode as I, readUsedSize as J, supportsEventListenerOptions as K, throttled as L, _isDomSupported as M, _factorize as N, finiteOrDefault as O, PI as P, callback as Q, _addGrace as R, _limitValue as S, TAU as T, toDegrees as U, _measureText as V, _int16Range as W, _alignPixel as X, clipArea as Y, renderText as Z, _arrayUnique as _, resolve as a, fontString as a$, toFont as a0, _toLeftRightCenter as a1, _alignStartEnd as a2, overrides as a3, merge as a4, _capitalize as a5, descriptors as a6, isFunction as a7, _attachContext as a8, _createResolver as a9, overrideTextDirection as aA, _textX as aB, restoreTextDirection as aC, drawPointLegend as aD, distanceBetweenPoints as aE, noop as aF, _setMinAndMaxByKey as aG, niceNum as aH, almostWhole as aI, almostEquals as aJ, _decimalPlaces as aK, Ticks as aL, log10 as aM, _longestText as aN, _filterBetween as aO, _lookup as aP, isPatternOrGradient as aQ, getHoverColor as aR, clone$1 as aS, _merger as aT, _mergerIf as aU, _deprecated as aV, _splitKey as aW, toFontString as aX, splineCurve as aY, splineCurveMonotone as aZ, getStyle as a_, _descriptors as aa, mergeIf as ab, uid as ac, debounce as ad, retinaScale as ae, clearCanvas as af, setsEqual as ag, _elementsEqual as ah, _isClickEvent as ai, _isBetween as aj, _readValueToProps as ak, _updateBezierControlPoints as al, _computeSegments as am, _boundSegments as an, _steppedInterpolation as ao, _bezierInterpolation as ap, _pointInLine as aq, _steppedLineTo as ar, _bezierCurveTo as as, drawPoint as at, addRoundedRectPath as au, toTRBL as av, toTRBLCorners as aw, _boundSegment as ax, _normalizeAngle as ay, getRtlAdapter as az, isArray as b, toLineHeight as b0, PITAU as b1, INFINITY as b2, RAD_PER_DEG as b3, QUARTER_PI as b4, TWO_THIRDS_PI as b5, _angleDiff as b6, color as c, defaults as d, effects$1 as e, resolveObjectKey as f, isNumberFinite as g, defined as h, isObject as i, createContext as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, getRelativePosition as z };\n//# sourceMappingURL=helpers.segment.js.map\n","/*!\n * Chart.js v4.0.1\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, T as TAU, m as toPercentage, n as toDimension, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as _elementsEqual, ai as _isClickEvent, aj as _isBetween, ak as _readValueToProps, al as _updateBezierControlPoints, am as _computeSegments, an as _boundSegments, ao as _steppedInterpolation, ap as _bezierInterpolation, aq as _pointInLine, ar as _steppedLineTo, as as _bezierCurveTo, at as drawPoint, au as addRoundedRectPath, av as toTRBL, aw as toTRBLCorners, ax as _boundSegment, ay as _normalizeAngle, az as getRtlAdapter, aA as overrideTextDirection, aB as _textX, aC as restoreTextDirection, aD as drawPointLegend, aE as distanceBetweenPoints, aF as noop, aG as _setMinAndMaxByKey, aH as niceNum, aI as almostWhole, aJ as almostEquals, aK as _decimalPlaces, aL as Ticks, aM as log10, aN as _longestText, aO as _filterBetween, aP as _lookup } from './chunks/helpers.segment.js';\nexport { aL as Ticks, d as defaults } from './chunks/helpers.segment.js';\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = color(from || transparent);\n        const c1 = c0.valid && color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = effects[cfg.easing] || effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}function awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data) {\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            x: key,\n            y: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (isObject(data)) {\n            this._data = convertObjectDataToArray(data);\n        } else if (_data !== data) {\n            if (_data) {\n                unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = _arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const skipNull = (meta)=>{\n            const parsed = meta.controller.getParsed(dataIndex);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(HALF_PI, startY, endY);\n        const minX = calcMin(PI, startX, endX);\n        const minY = calcMin(PI + HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing'\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = TAU;\n        let max = -TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar adapters = {\n    _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n        if (!intersect) {\n            return lookupMethod(data, axis, value);\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (_angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height1 = chartArea.h * weight;\n            const width1 = stack.size || box.width;\n            if (defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width1, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width1, height1);\n            }\n            stack.start = x;\n            stack.placed += height1;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n    chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = _getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    active = false;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n    let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (isObject(position)) {\n            const positionAxisID1 = Object.keys(position)[0];\n            const value1 = position[positionAxisID1];\n            titleX = scales[positionAxisID1].getPixelForValue(value1) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: finiteOrDefault(_userMin, _suggestedMin),\n            max: finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: isNumberFinite(_userMin),\n            maxDefined: isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: finiteOrDefault(min, finiteOrDefault(max, min)),\n            max: finiteOrDefault(max, finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = _addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = this.ticks.length;\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; ++i){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!isNullOrUndef(label) && !isArray(label)) {\n                width = _measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel = label[j];\n                    if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n                        width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return _alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (isObject(position)) {\n                const positionAxisID1 = Object.keys(position)[0];\n                const value1 = position[positionAxisID1];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID1].getPixelForValue(value1));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret1 = this._getYAxisLabelAlignment(tl);\n            textAlign = ret1.textAlign;\n            x = ret1.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID1 = Object.keys(position)[0];\n                const value1 = position[positionAxisID1];\n                x = this.chart.scales[positionAxisID1].getPixelForValue(value1);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                rotation,\n                label,\n                font,\n                color,\n                strokeColor,\n                strokeWidth,\n                textOffset,\n                textAlign: tickTextAlign,\n                textBaseline,\n                translation: [\n                    x,\n                    y\n                ],\n                backdrop\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            clipArea(ctx, area);\n        }\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        let i, ilen;\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            const item = items[i];\n            const tickFont = item.font;\n            const label = item.label;\n            let y = item.textOffset;\n            renderText(ctx, label, 0, y, tickFont, item);\n        }\n        if (area) {\n            unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = toFont(title.font);\n        const padding = toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || isObject(position)) {\n            offset += padding.bottom;\n            if (isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in defaults[scope]) {\n            delete defaults[scope][id];\n            if (this.override) {\n                delete overrides[id];\n            }\n        }\n    }\n}function registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [\n        parentScope ? defaults.get(parentScope) : {},\n        defaults.get(scope),\n        item.defaults\n    ]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = _capitalize(method);\n        callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n} function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i1 = 0; i1 < local.length; i1++){\n        const plugin = local[i1];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, scaleOptions) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n    id = scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.length > 1 && determineAxis(id[0].toLowerCase(), scaleOptions);\n    if (id) {\n        return id;\n    }\n    throw new Error(`Cannot determine type of '${name}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        mergeIf(scale, [\n            defaults.scales[scale.type],\n            defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`,\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || [],\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            overrides[type] || {},\n            defaults.datasets[type] || {},\n            {\n                type\n            },\n            defaults,\n            descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = _attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}function getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = _createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>isObject(value) && Object.getOwnPropertyNames(value).reduce((acc, key)=>acc || isFunction(value[key]), false);\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = _descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.0.1\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nfunction getDatasetArea(meta) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: xScale.left,\n            right: xScale.right,\n            top: yScale.top,\n            bottom: yScale.bottom\n        };\n    }\n}\nclass Chart {\n    static defaults = defaults;\n    static instances = instances;\n    static overrides = overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i1 = 0, ilen1 = this.data.datasets.length; i1 < ilen1; ++i1){\n            this._updateDataset(i1, isFunction(mode) ? mode({\n                datasetIndex: i1\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resize(width, height);\n            this._resizeBeforeDraw = null;\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const clip = meta._clip;\n        const useClip = !clip.disabled;\n        const area = getDatasetArea(meta) || this.chartArea;\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (useClip) {\n            clipArea(ctx, {\n                left: clip.left === false ? 0 : area.left - clip.left,\n                right: clip.right === false ? this.width : area.right + clip.right,\n                top: clip.top === false ? 0 : area.top - clip.top,\n                bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n            });\n        }\n        meta.controller.draw();\n        if (useClip) {\n            unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = _isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\nvar Chart$1 = Chart;\n\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return _readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: _limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter1 = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter1.x, pCenter1.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter2 = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter2.x, pCenter2.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter3 = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter3.x, pCenter3.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = this.options.spacing / 2;\n        const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n        const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n        const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference', \n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n    if (options.stepped) {\n        return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierInterpolation;\n    }\n    return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = _boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction createDefaultDatasetColorizer() {\n    return (dataset, i)=>{\n        dataset.borderColor = getBorderColor(i);\n        dataset.backgroundColor = getBackgroundColor(i);\n    };\n}\nfunction createDoughnutDatasetColorizer() {\n    let i = 0;\n    return (dataset)=>{\n        dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    };\n}\nfunction createPolarAreaDatasetColorizer() {\n    let i = 0;\n    return (dataset)=>{\n        dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    };\n}\nfunction getColorizer(type) {\n    if (type === 'doughnut' || type === 'pie') {\n        return createDoughnutDatasetColorizer();\n    } else if (type === 'polarArea') {\n        return createPolarAreaDatasetColorizer();\n    }\n    return createDefaultDatasetColorizer();\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { type , options: { elements  } , data: { datasets  }  } = chart.config;\n        if (containsColorsDefinitions(datasets) || elements && containsColorsDefinitions(elements)) {\n            return;\n        }\n        const colorizer = getColorizer(type);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = _boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = _boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = _normalizeAngle(start);\n        end = _normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (_isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    if (target && line.points.length) {\n        clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis\n        });\n        unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    if (property === 'x' && below !== above) {\n        clipVertical(ctx, target, area.top);\n        fill(ctx, {\n            line,\n            target,\n            color: above,\n            scale,\n            property\n        });\n        ctx.restore();\n        ctx.save();\n        clipVertical(ctx, target, area.bottom);\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: below,\n        scale,\n        property\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, bounds) {\n    const { top , bottom  } = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x') {\n        ctx.beginPath();\n        ctx.rect(start, top, end - start, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox1 of hitboxes){\n                if (hitbox1.col !== col) {\n                    col = hitbox1.col;\n                    top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox1.top = top;\n                hitbox1.left += this.left + padding;\n                hitbox1.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox1.left), hitbox1.width);\n                top += hitbox1.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            clipArea(ctx, this);\n            this._draw();\n            unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = defaults.color;\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight);\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = _alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length + 0.5 : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = isArray(opts.text) ? opts.text.length : 1;\n        this._padding = toPadding(opts.padding);\n        const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = _alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = _alignStartEnd(align, bottom, top);\n                rotation = PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = _alignStartEnd(align, top, bottom);\n                rotation = PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: _toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let x = 0;\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                x += pos.x;\n                y += pos.y;\n                ++count;\n            }\n        }\n        return {\n            x: x / count,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, (bodyItem)=>{\n        each(bodyItem.before, maxLineWidth);\n        each(bodyItem.lines, maxLineWidth);\n        each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: _limitValue(x, 0, chart.width - size.width),\n        y: _limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: noop,\n    beforeBody: noop,\n    beforeLabel: noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: noop,\n    afterBody: noop,\n    beforeFooter: noop,\n    footer: noop,\n    afterFooter: noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColors = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColors.borderColor;\n            ctx.fillStyle = labelColors.backgroundColor;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = isObject(labelColors.borderWidth) ? Math.max(...Object.values(labelColors.borderWidth)) : labelColors.borderWidth || 1;\n            ctx.strokeStyle = labelColors.borderColor;\n            ctx.setLineDash(labelColors.borderDash || []);\n            ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n            const borderRadius = toTRBLCorners(labelColors.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColors.backgroundColor;\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColors.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColors: plugin_colors,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : _limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        ticks.push({\n            value: Math.round((niceMin + j * spacing) * factor) / factor\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = sign(min);\n            const maxSign = sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? min : 0;\n        this.max = isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = log10(start);\n        this._valueRange = log10(this.max) - log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = toPadding(tickOpts.backdropPadding);\n        return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: _longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const extra = getTickBackdropHeight(opts) / 2;\n    const outerDistance = scale.drawingArea;\n    const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n        const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n        const size = labelSizes[i];\n        const y = yForAngle(pointLabelPosition.y, size.h, angle);\n        const textAlign = getTextAlignForAngle(angle);\n        const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n        items.push({\n            x: pointLabelPosition.x,\n            y,\n            textAlign,\n            left,\n            top: y,\n            right: left + size.w,\n            bottom: y + size.h\n        });\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        const plFont = toFont(optsAtIndex.font);\n        const { x , y , textAlign , left , top , right , bottom  } = scale._pointLabelItems[i];\n        const { backdropColor  } = optsAtIndex;\n        if (!isNullOrUndef(backdropColor)) {\n            const borderRadius = toTRBLCorners(optsAtIndex.borderRadius);\n            const padding = toPadding(optsAtIndex.backdropPadding);\n            ctx.fillStyle = backdropColor;\n            const backdropLeft = left - padding.left;\n            const backdropTop = top - padding.top;\n            const backdropWidth = right - left + padding.width;\n            const backdropHeight = bottom - top + padding.height;\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: backdropLeft,\n                    y: backdropTop,\n                    w: backdropWidth,\n                    h: backdropHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n            }\n        }\n        renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value,  (parser)) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = _lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = _filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = _limitValue(start, 0, limit);\n        end = _limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort((a, b)=>a - b).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return _arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = _lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = _lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\nvar TimeSeriesScale$1 = TimeSeriesScale;\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale$1\n});\n\nconst registerables = [\n    controllers,\n    elements,\n    plugins,\n    scales, \n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart$1 as Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, TimeScale, TimeSeriesScale$1 as TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\n//# sourceMappingURL=chart.js.map\n","import {Chart, registerables} from '../dist/chart.js';\n\nChart.register(...registerables);\n\nexport * from '../dist/chart.js';\nexport default Chart;\n","import * as staticData from \"./scripts/data\"\nimport Chart from 'chart.js/auto';\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n    // formats the timestamp\n    const formattedTimestamp = (timestamp) => {\n        // Create a new JavaScript Date object based on the timestamp\n        // multiplied by 1000 so that the argument is in milliseconds, not seconds.\n        let date = new Date(timestamp * 1000);\n        // Hours part from the timestamp\n        let hours = date.getHours();\n        // Minutes part from the timestamp\n        let minutes = \"0\" + date.getMinutes();\n        // Seconds part from the timestamp\n        let seconds = \"0\" + date.getSeconds();\n        // Will display time in 10:30:23 format\n        let formattedTime = hours + ':' + minutes.substr(-2) + ':' + seconds.substr(-2);\n        document.querySelector(\"#exchangeStatus strong\").innerHTML = formattedTime;\n        return formattedTime;\n    }\n\n    let currencies = JSON.parse(localStorage.getItem(\"currencies\")) || {};\n\n    async function fetchAndUpdate(shouldForce = false) {\n        let myCookie = document.cookie;\n\n        if (myCookie.split(\";\").indexOf(\"currenciesUpdated=true\") !== -1) {\n            console.log(\"cookie found\", myCookie)\n        } else {\n            console.warn(\"cookie not found\")\n            const today = new Date();\n            const tomorrow = new Date();\n            tomorrow.setDate(today.getDate() + 1)\n            document.cookie = `currenciesUpdated=true;expires=${tomorrow}; path=/`;\n            if (myCookie.split(\";\").indexOf(\"currenciesUpdated=true\") !== -1) { console.warn(\"cookie created\") }\n            shouldForce = true;\n        }\n\n        if (shouldForce) {\n            let myHeaders = new Headers();\n            myHeaders.append(\"apikey\", \"i6Gvyy6na70P0E5YGt4d2FyO7dlu59mk\");\n\n            let requestOptions = {\n                method: 'GET',\n                redirect: 'follow',\n                headers: myHeaders\n            };\n\n            await fetch(\"https://api.apilayer.com/currency_data/live?source=USD&currencies=BRL%2CEUR%2CINR%2CRUB%2CCNY\", requestOptions)\n                .then(response => response.json())\n                .then(result => {\n                    console.log(\"fetching api and setting the results to local storage\")\n                    localStorage.setItem('currencies', JSON.stringify(result))\n                    formattedTimestamp(currencies.timestamp)\n                    console.log(\"exchange rates updated in local storage\")\n                    return JSON.stringify(result)\n                })\n                .catch((error) => {\n                    console.error('error', error)\n                });\n        } else {\n            console.warn(\"exchange rates (not) updated\")\n            return currencies\n        }\n    }\n\n    let btnUpdate = document.querySelector(\"header button\")\n    btnUpdate.addEventListener(\"click\",(e)=>{\n        e.preventDefault();\n        currencies = fetchAndUpdate(true)\n    })\n\n    // populate section \"products\"\n    function populateProducts() {\n        const productsContainer = document.getElementById(\"products\")\n        productsContainer.innerHTML = \"\";\n\n        Object.entries(staticData.products).forEach((product,index) => {\n            // creates the main div of a product\n            const section = document.createElement(\"section\");\n            section.setAttribute(\"id\",`product-${index}`)\n            section.setAttribute(\"style\",`background-color:${product[1].primaryColor};color:${product[1].secondaryColor}`)\n\n            // creates elements and populates them\n            const asideInfo = document.createElement(\"aside\")\n            asideInfo.setAttribute(\"class\",\"info\")\n            const asideCharts = document.createElement(\"aside\")\n            asideCharts.setAttribute(\"class\",\"charts\")\n            const h1 = document.createElement(\"h1\")\n            h1.innerHTML = product[1].title\n            const h2 = document.createElement(\"h2\")\n            h2.innerHTML = product[1].subtitle\n            const image = document.createElement(\"img\")\n            image.setAttribute(\"src\",`assets/img/${product[0]}.png`)\n            image.setAttribute(\"alt\",product[1].title) // for accessibility purposes\n\n            // appends elements to asideInfo\n            asideInfo.appendChild(h1)\n            asideInfo.appendChild(h2)\n            asideInfo.appendChild(image)\n\n            // creates the 'previous' button if it isn't the first element\n            if (index !== 0) {\n                const btnPrevious = document.createElement(\"button\")\n                btnPrevious.setAttribute(\"style\",`background-color:${product[1].primaryColor};color:${product[1].secondaryColor};border:1px solid ${product[1].secondaryColor};border-radius:5px;margin-right:15px;`)\n                btnPrevious.innerHTML = '<i class=\"fa-solid fa-arrow-left\"></i>'\n                asideInfo.appendChild(btnPrevious)\n\n                btnPrevious.addEventListener(\"click\",function (e) {\n                    e.preventDefault();\n                    document.getElementById(`product-${index-1}`).scrollIntoView();\n                })\n            }\n\n            // creates the 'next' button if it isn't the last element\n            if (index !== Object.entries(staticData.products).length-1) {\n                const btnNext = document.createElement(\"button\")\n                btnNext.setAttribute(\"style\",`background-color:${product[1].secondaryColor};color:${product[1].primaryColor};border-radius:5px;border:0;`)\n                btnNext.innerHTML = 'Next <i class=\"fa-solid fa-arrow-right\" style=\"margin-left:30px;\"></i>'\n                asideInfo.appendChild(btnNext)\n\n                btnNext.addEventListener(\"click\",function (e) {\n                    e.preventDefault();\n                    document.getElementById(`product-${index+1}`).scrollIntoView();\n                })\n            }\n\n            // creates the 'back to top' button if it is the last element\n            if (index === Object.entries(staticData.products).length-1) {\n                const btnTop = document.createElement(\"button\")\n                btnTop.setAttribute(\"style\",`\n                    background-color:${product[1].primaryColor};\n                    color:${product[1].secondaryColor};\n                    border-radius:5px;\n                    border:1px solid ${product[1].secondaryColor};`)\n                btnTop.innerHTML = 'Back to top <i class=\"fa-solid fa-arrow-up\" style=\"margin-left:15px;\"></i>'\n                asideInfo.appendChild(btnTop)\n\n                btnTop.addEventListener(\"click\",function (e) {\n                    e.preventDefault();\n                    document.getElementById(\"splash-screen\").scrollIntoView();\n                })\n            }\n\n            // creates the tabs navigations and panels on the right\n            const navTabs = document.createElement(\"nav\")\n            section.appendChild(asideCharts)\n            let chartPanel = document.createElement(\"div\")\n            chartPanel.classList.add(`product-${index}-panel`)\n\n            for (let i = 0; i < 3; i ++) {\n                let btnTab = document.createElement(\"button\")\n                let divTab = document.createElement(\"div\")\n                btnTab.setAttribute(\"data-id\",`product-${index}-tab-${i}`)\n                if (i === 0) {\n                    // creates the button\n                    btnTab.innerHTML = \"price\"\n                    btnTab.classList.add(`tab-${index}`)\n                    btnTab.classList.add(\"selected\")\n                    btnTab.setAttribute(\"style\",`\n                        background-color:${product[1].primaryColor};\n                        color:${product[1].secondaryColor};\n                        border:1px solid ${product[1].secondaryColor};\n                        border-radius:5px 0 0 5px;`)\n\n                    // creates the panel\n                    divTab.setAttribute(\"id\",`product-${index}-tab-${i}`)\n                    divTab.classList.add(\"tabPanel\")\n                    divTab.classList.add(\"selected\")\n\n                    // populates with data to create prices chart\n                    const plainDiv = document.createElement(\"div\")\n                    const chartCanvas = document.createElement(\"canvas\")\n                    chartCanvas.setAttribute(\"id\",`myChart-${product[0]}-prices`)\n                    \n                    plainDiv.appendChild(chartCanvas)\n                    divTab.appendChild(plainDiv)\n                    \n\n                } else if (i === 1) {\n                    // creates the button\n                    btnTab.innerHTML = \"% minimum wage\"\n                    btnTab.classList.add(`tab-${index}`)\n                    btnTab.setAttribute(\"style\",`\n                        background-color:${product[1].primaryColor};\n                        color:${product[1].secondaryColor};\n                        border:1px solid ${product[1].secondaryColor};\n                        border-left:0;\n                        border-right:0;\n                        border-radius:0;`)\n\n                        // creates the panel\n                        divTab.setAttribute(\"id\",`product-${index}-tab-${i}`)\n                        divTab.classList.add(\"tabPanel\")\n                        divTab.classList.add(\"hidden\")\n    \n                        // populates with data to create prices chart\n                        const plainDiv = document.createElement(\"div\")\n                        const chartCanvas = document.createElement(\"canvas\")\n                        chartCanvas.setAttribute(\"id\",`myChart-${product[0]}-minWage`)\n                        \n                        plainDiv.appendChild(chartCanvas)\n                        divTab.appendChild(plainDiv)\n\n\n                } else if (i === 2) {\n                    // creates the button\n                    btnTab.innerHTML = \"days of labor\"\n                    btnTab.classList.add(`tab-${index}`)\n                    btnTab.setAttribute(\"style\",`\n                        background-color:${product[1].primaryColor};\n                        color:${product[1].secondaryColor};\n                        border:1px solid ${product[1].secondaryColor};\n                        border-radius:0 5px 5px 0;`)\n\n                    // creates the panel\n                    divTab.setAttribute(\"id\",`product-${index}-tab-${i}`)\n                    divTab.classList.add(\"tabPanel\")\n                    divTab.classList.add(\"hidden\")\n\n                    // populates with data to create prices chart\n                    const plainDiv = document.createElement(\"div\")\n                    const chartCanvas = document.createElement(\"canvas\")\n                    chartCanvas.setAttribute(\"id\",`myChart-${product[0]}-days`)\n                    \n                    plainDiv.appendChild(chartCanvas)\n                    divTab.appendChild(plainDiv)\n\n\n                }\n                \n                chartPanel.appendChild(divTab)\n                \n                navTabs.appendChild(btnTab)\n            }\n            asideCharts.appendChild(navTabs)\n            asideCharts.appendChild(chartPanel)\n\n            // logic to set 'selected' when a tab is clicked\n            navTabs.addEventListener(\"click\",(e) => {\n                // lists all tabs of the product and removes 'selected' class\n                const buttons = document.querySelectorAll(`#product-${index} nav button`) \n                Object.values(buttons).forEach(btn => btn.classList.remove(\"selected\"))\n\n                // lists all tab panels of the product and removes 'selected' class\n                const tabs = document.querySelectorAll(`.product-${index}-panel > div`) \n                Object.values(tabs).forEach(tab => tab.classList.add(\"hidden\"))\n                Object.values(tabs).forEach(tab => tab.classList.remove(\"selected\"))\n\n                // enables 'selected' only to the clicked tab and panel\n                e.target.classList.add(\"selected\")\n                document.getElementById(e.path[0].attributes[0].value).classList.remove(\"hidden\")\n                document.getElementById(e.path[0].attributes[0].value).classList.add(\"selected\")\n            })\n\n            // appends asideInfo to div and div to container\n            section.appendChild(asideInfo)\n            section.appendChild(asideCharts)\n\n            productsContainer.appendChild(section)\n\n\n        })\n    }\n\n    populateProducts()\n\n    // creates a listener to the \"start\" button\n    const btnStart = document.querySelector(\".headline button\")\n    const initialProduct = document.getElementById(\"product-0\")\n    btnStart.addEventListener(\"click\",function (e) {\n        e.preventDefault();\n        initialProduct.scrollIntoView();\n    })\n\n    // creates a listener so the footer becomes a link back to the top\n    const footer = document.querySelector(\"footer\")\n    footer.addEventListener(\"click\",function (e) {\n        document.getElementById(\"splash-screen\").scrollIntoView();\n    })\n\n    fetchAndUpdate()\n\n    // calculates the conversion\n    function _convertCurrency(currency,cost) {\n        let rate = currencies.quotes[\"USD\" + currency] || 1 // in this case 1 represents USD to USD conversion\n        return cost / rate\n    }\n\n    // returns the object of a product with converted prices \n    function listPrices(product,format = true) {\n        let prices = []\n        // if (product[0] === \"mcchicken\") console.log(product)\n        Object.entries(product[1].prices).forEach((country) => {\n            let countryPrice = {}\n            countryPrice[country[0]] = _convertCurrency(country[0],country[1])\n            if (format) {\n                countryPrice[country[0]] = countryPrice[country[0]].toLocaleString('en-US', {\n                    style: 'currency',\n                    currency: 'USD',\n                })\n            }\n            prices.push(countryPrice)\n        })\n        return prices\n    }\n\n    function percentageMinimumWage(product) {\n        let prices = listPrices(product,false)\n        let salariesUSD = []\n        let salaries = Object.entries(staticData.countries)\n        salaries.forEach((country)=> {\n            let countryMinWage = 0;\n            countryMinWage = _convertCurrency(Object.keys(country[1])[0],country[1][Object.keys(country[1])[0]])\n            salariesUSD.push(countryMinWage)\n        })\n        let percentage = []\n        for (let i = 0; i < salariesUSD.length; i++) {\n            let eachPercentage = {}\n            eachPercentage[Object.keys(prices[i])[0]] = ((prices[i][Object.keys(prices[i])[0]] / salariesUSD[i]) * 100).toFixed(2)\n            percentage.push(eachPercentage)\n        }\n        // console.log(`Percentage ${product[1].title}`,percentage)\n        return percentage\n    }\n\n\n    function days(product) {\n        let prices = listPrices(product,false)\n        let salariesUSD = []\n        let salaries = Object.entries(staticData.countries)\n        salaries.forEach((country)=> {\n            let countryMinWage = 0;\n            countryMinWage = _convertCurrency(Object.keys(country[1])[0],country[1][Object.keys(country[1])[0]])\n            salariesUSD.push(countryMinWage)\n        })\n        let days = []\n        for (let i = 0; i < salariesUSD.length; i++) {\n            let eachPercentage = {}\n            let perDay = (Object.values(prices[i]) / (salariesUSD[i] / 30)).toFixed(2)\n            eachPercentage[Object.keys(prices[i])[0]] = (Object.values(prices[i]) / (salariesUSD[i] / 30)).toFixed(2)\n            days.push(eachPercentage)\n        }\n        // console.log(`Days ${product[1].title}`,days)\n        return days\n    }\n\n    // swapping country names\n    let i = 0;\n    let text = \"USA\";\n    let countriesNames = Object.keys(staticData.countries)\n    document.querySelector(\".headline h2 span\").innerHTML = countriesNames.length;\n    function _getChangedText() {\n        i = (i + 1) % countriesNames.length;\n        return text.replace(/USA/, countriesNames[i]);\n    }\n    function _changeText() {\n        let txt = _getChangedText();\n        document.querySelector(\".headline h1 span\").innerHTML = txt;\n    }\n    setInterval(_changeText, 2500);\n\n\n    function _renderChart(type,product) {\n\n        let showData = []\n        let showTitle = \"\";\n        let showLabel = \"\";\n        if (type === \"prices\") {\n            listPrices(product,false).forEach(p=>{\n                Object.values(p).forEach((v)=>{\n                    showData.push(v)\n                })\n            })\n            showTitle = \"Price in Dollars\";\n            showLabel = \"USD\"\n\n        } else if (type === \"minWage\") {\n            percentageMinimumWage(product).forEach(p=>{\n                Object.values(p).forEach((v)=>{\n                    showData.push(v)\n                })\n            })\n            showTitle = \"Percentage of the minimum wage\";\n            showLabel = \"%\"\n        } else if (type === \"days\") {\n            days(product).forEach(p=>{\n                Object.values(p).forEach((v)=>{\n                    showData.push(v)\n                })\n                \n            })\n            showTitle = \"Days of labor to buy the product\";\n            showLabel = \"Days\"\n        } else {\n            return;\n        }\n\n        const labels = Object.keys(staticData.countries);\n        labels.map(country=>{\n            return country.toLowerCase()\n        })\n        const ctx = document.getElementById(`myChart-${product[0]}-${type}`);\n\n        let delayed;\n\n                new Chart(ctx, {\n                    type: 'bar',\n                    data: {\n                    labels: labels,\n                    datasets: [{\n                        label: showLabel,\n                        data: showData,\n                        borderWidth: 1,\n                        backgroundColor: product[1].secondaryColor,\n                        hoverBackgroundColor: '#ffffff',\n                        borderColor: product[1].borderColor, \n                    }]\n                    },\n                    options: {\n                        scales: {\n                            y: {\n                                beginAtZero: true,\n                                grid: {\n                                    zeroLineColor: product[1].secondaryColor,\n                                    color: product[1].gridColor\n                                },\n                                border: {\n                                    color: product[1].secondaryColor\n                                },\n                                ticks: {\n                                    color: product[1].secondaryColor,\n                                    font: {\n                                        size: 18\n                                    }\n                                }\n                            },\n                            x: {\n                                drawTicks: true,\n                                beginAtZero: true,\n                                grid: {\n                                    zeroLineColor: product[1].secondaryColor,\n                                    color: product[1].gridColor\n                                },\n                                border: {\n                                    color: product[1].secondaryColor\n                                },\n                                ticks: {\n                                    color: product[1].secondaryColor,\n                                    font: {\n                                        size: 18\n                                    }\n                                },\n                                mirror: true\n                            }\n                        },\n                        animation: {\n                            onComplete: () => {\n                                delayed = true;\n                            },\n                            delay: (context) => {\n                                let delay = 0;\n                                if (context.type === 'data' && context.mode === 'default' && !delayed) {\n                                delay = context.dataIndex * 300 + context.datasetIndex * 100;\n                                }\n                                return delay;\n                            },\n                        },\n                        plugins:\n                        {\n                            legend: {\n                                labels: {\n                                    font: {\n                                        size: 12\n                                    },\n                                    color: product[1].secondaryColor\n                                }\n                            },\n                            title: {\n                                display: true,\n                                text: showTitle,\n                                font: {\n                                    size: 24\n                                },\n                                color: product[1].secondaryColor\n                            }\n                        }\n                    }\n                });\n        }\n     \n        function createCharts() {\n            Object.entries(staticData.products).forEach((product) => {\n                _renderChart(\"prices\",product)\n                _renderChart(\"minWage\",product)\n                _renderChart(\"days\",product)\n            })\n        }\n    \n        createCharts()\n});\n\n"],"names":["countries","products","mcchicken","prices","primaryColor","secondaryColor","borderColor","gridColor","title","subtitle","corolla","jeans","iphone","coke","noop","uid","id","isNullOrUndef","value","isArray","Array","type","Object","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toDimension","dimension","endsWith","parseFloat","callback","fn","args","thisArg","apply","each","loopable","reverse","i","len","keys","length","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","clone$1","source","map","target","create","klen","k","isValidKey","key","indexOf","_merger","options","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","v","x","o","y","resolveObjectKey","obj","resolver","parts","split","tmp","part","push","_splitKey","_getKeyResolver","_capitalize","str","charAt","toUpperCase","defined","isFunction","setsEqual","a","b","size","item","has","PI","Math","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","range","roundedRange","round","niceRange","pow","floor","fraction","isNumber","n","isNaN","_setMinAndMaxByKey","array","property","min","max","toRadians","degrees","toDegrees","radians","_decimalPlaces","e","p","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","sqrt","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","s","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","splice","forEach","_arrayUnique","items","set","Set","add","from","requestAnimFrame","window","requestAnimationFrame","throttled","ticking","_toLeftRightCenter","align","_alignStartEnd","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","_parsed","axis","minDefined","maxDefined","getUserBounds","getPixelForValue","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","assign","atEdge","t","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","m","d","easeInOutBounce","effects$1","lim","l","h","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","c","f","hex","h1","h2","eq","HUE_RE","hsl2rgbn","hsv2rgbn","hwb2rgbn","w","rgb","rgb2hsl","r","g","hueValue","calln","hsl2rgb","hue","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","names","RGB_RE","to","modHSL","ratio","clone","proto","fromObject","input","functionParse","exec","rgbParse","p1","p2","hwb2rgb","hsv2rgb","hueParse","Color","constructor","ret","unpacked","tkeys","j","ok","nk","replace","parseInt","unpack","transparent","toLowerCase","nameParse","this","_rgb","_valid","valid","rgbString","undefined","hexString","isShort","alpha","hslString","mix","color","weight","c1","c2","w2","w1","interpolate","rgb1","rgb2","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","rotate","deg","index_esm","isPatternOrGradient","getHoverColor","numbers","colors","intlCache","Map","formatNumber","num","locale","cacheKey","JSON","stringify","formatter","get","Intl","NumberFormat","getNumberFormat","format","formatters","values","numeric","tickValue","ticks","chart","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","Ticks","overrides","descriptors","getScope$1","node","root","scope","Defaults","_descriptors","_appliers","animation","backgroundColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","override","route","name","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","enumerable","local","appliers","defaults","_scriptable","startsWith","_indexable","_fallback","delay","duration","easing","loop","properties","active","resize","show","animations","visible","hide","autoPadding","padding","top","right","bottom","left","display","offset","beginAtZero","bounds","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","_measureText","data","gc","longest","string","textWidth","measureText","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","resetTransform","clearRect","height","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","clipArea","clip","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","renderText","opts","lines","strokeWidth","strokeColor","line","translation","fillStyle","textAlign","textBaseline","setRenderOpts","backdrop","drawBackdrop","strokeStyle","strokeText","maxWidth","fillText","decorateText","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","decorationWidth","oldColor","fillRect","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","toFontString","resolve","inputs","info","cacheable","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","_resolve","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","proxy","prefix","readKey","needsSubResolver","createSubResolver","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","isScriptable","Error","join","delete","_resolveScriptable","isIndexable","arr","filter","_resolveArray","_resolveWithContext","allKeys","configurable","scriptable","indexable","_allKeys","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","_parsing","parsed","parse","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","capControlPoint","pt","_updateBezierControlPoints","controlPoints","spanGaps","cubicInterpolationMode","valueAxis","pointsLen","deltaK","mK","pointBefore","pointCurrent","pointAfter","slopeDelta","alphaK","betaK","tauK","squaredMagnitude","monotoneAdjust","iPixel","vPixel","monotoneCompute","splineCurveMonotone","prev","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","_isDomSupported","document","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","positions","getPositionedStyle","styles","suffix","result","pos","getRelativePosition","event","borderBox","boxSizing","paddings","borders","box","touches","offsetX","offsetY","shadowRoot","useOffsetPos","getBoundingClientRect","clientX","clientY","getCanvasPosition","round1","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","el","getPropertyValue","getStyle","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","getRtlAdapter","rtl","rectX","setWidth","xPlus","leftForLtr","itemWidth","getRightToLeftAdapter","_itemWidth","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","_boundSegment","segment","startBound","endBound","getSegment","prevValue","inside","subStart","_boundSegments","segments","sub","readStyle","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","styleChanged","prevStyle","Animator","_request","_charts","_running","_lastDate","_notify","anims","date","callbacks","numSteps","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","pop","_getAnims","charts","complete","progress","listen","cb","reduce","acc","cur","_duration","stop","cancel","remove","animator","interpolators","boolean","factor","c0","number","Animation","cfg","currentValue","_fn","_easing","_start","_loop","_target","_prop","_from","_to","_promises","update","elapsed","wait","promises","Promise","res","rej","resolved","method","Animations","config","_chart","_properties","configure","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","all","awaitAll","then","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","isStacked","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","_cachedMeta","_stacks","iAxis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","getFirstScaleId","shift","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","static","_cachedDataOpts","getMeta","_type","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","_stacked","addElements","isPluginEnabled","updateIndex","dataset","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","adata","convertObjectDataToArray","isExtensible","defineProperty","base","object","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","canStack","otherScale","hidden","createStack","NEGATIVE_INFINITY","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","disabled","toClip","defaultClip","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","computeMinSampleSize","_cache","$bar","visibleMetas","concat","sort","getAllScaleValues","curr","_length","updateMinAndPrev","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","edge","borderSkipped","horizontal","borderProps","enableBorderRadius","parseEdge","orig","v2","startEnd","setInflateAmount","inflateAmount","DoughnutController","animateRotate","animateScale","cutout","circumference","spacing","aspectRatio","legend","generateLabels","fontColor","getDataVisibility","legendItem","toggleDataVisibility","super","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxHeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","controllers","__proto__","BarController","categoryPercentage","barPercentage","grouped","_index_","_value_","iAxisKey","vAxisKey","bars","getBasePixel","isHorizontal","ruler","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","skipNull","_getStackCount","_getStackIndex","pixels","barThickness","_startPixel","_endPixel","stackCount","baseValue","minBarLength","actualBase","floating","barSign","startPixel","getPixelForDecimal","endPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","rects","BubbleController","LineController","_dataset","_datasetIndex","_decimated","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","lastPoint","updateControlPoints","PolarAreaController","angleLines","circular","pointLabels","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","ScatterController","registry","getElement","DateAdapterBase","members","init","formats","diff","startOf","endOf","adapters","binarySearch","metaset","lookupMethod","_reversePixels","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","getIntersectItems","useFinalPosition","isPointInArea","inRange","getNearestItems","distanceMetric","useX","useY","deltaX","deltaY","getDistanceMetricForAxis","minDistance","getCenterPoint","getNearestCartesianItems","getProps","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","params","layout","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","fitBoxes","boxes","refitBoxes","refit","fullSize","setBoxDims","placeBoxes","userPadding","placed","stackWeight","height1","width1","layouts","addBox","_layers","z","removeBox","layoutItem","minPadding","availableWidth","availableHeight","layoutBoxes","wrapBoxes","wrap","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","vBoxMaxWidth","hBoxMaxHeight","buildStacks","setLayoutDims","updatePos","change","handleMaxPadding","BasePlatform","acquireContext","releaseContext","getMaximumSize","isAttached","updateConfig","BasicPlatform","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","createResizeObserver","container","clientWidth","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","bbWidth","bbHeight","margins","containerSize","containerStyle","containerBorder","containerPadding","clientHeight","getContainerSize","isConnected","Element","tooltipPosition","hasValue","final","newTicks","majorStart","majorEnd","ceil","offsetFromEdge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","getTickMarkLength","getTitleHeight","titleAlign","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_maxLength","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","beforeUpdate","tickOpts","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","minmax","keepZero","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","determinedMaxTicks","_tickSize","maxScale","maxChart","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","skipMajors","evenMajorSpacing","getEvenSpacing","factors","_factorize","calculateSpacing","avgMajorSpacing","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","caches","widths","heights","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","idx","getValueForPixel","decimal","getDecimalForPixel","getBaseValue","createTickContext","optionTicks","rot","_computeGridLineItems","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","positionAxisID1","value1","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","tickBorderDash","tickBorderDashOffset","_computeLabelItems","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","ret1","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","drawTitle","titleX","titleY","titleArgs","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","itemDefaults","defaultRoutes","routes","propertyParts","sourceName","sourceScope","routeDefaults","registerDefaults","unregister","Registry","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","localIds","i1","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","getIndexAxis","datasetDefaults","determineAxis","scaleOptions","initOptions","chartDefaults","configScales","chartIndexAxis","scaleConf","error","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","mergeScaleConfig","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","hasFunction","needContext","resolverCache","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","OffscreenCanvas","_detectPlatform","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","timeout","clearTimeout","setTimeout","debounce","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","ilen1","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getDatasetArea","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","_isClickEvent","lastEvent","determineLastEvent","Chart$1","rThetaToXY","theta","pathArc","pixelMargin","innerR","spacingOffset","avNogSpacingRadius","angleOffset","outerStart","outerEnd","innerStart","innerEnd","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","parseBorderRadius$1","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","pCenter1","innerMidAdjustedAngle","pCenter2","p8","pCenter3","outerStartX","outerStartY","outerEndX","outerEndY","setStyle","lineCap","lineJoin","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","LineElement","_path","_points","_segments","_pointsUpdated","segmentOptions","findStartAndEnd","chartContext","baseStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","doSplitByStyles","splitByStyles","solidSegments","_computeSegments","_interpolate","_getInterpolationMethod","interpolated","segmentMethod","path","strokePathWithCache","strokePathDirect","inRange$1","hitRadius","getBarBounds","bar","half","skipOrLimit","skipX","skipY","addNormalRectPath","inflateRect","amount","refRect","ArcElement","fullCircles","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","drawArc","inner","angleMargin","clipArc","PointElement","hoverRadius","mouseX","mouseY","inXRange","inYRange","BarElement","outer","maxW","maxH","parseBorderWidth","maxR","enableBorder","parseBorderRadius","boundingRects","addRectPath","BORDER_COLORS","BACKGROUND_COLORS","getBorderColor","getBackgroundColor","containsColorsDefinitions","plugin_colors","_args","colorizer","createDoughnutDatasetColorizer","createPolarAreaDatasetColorizer","getColorizer","cleanDecimatedDataset","cleanDecimatedData","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","decimated","getStartAndCountOfVisiblePointsSimplified","threshold","samples","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","lttbDecimation","minIndex","maxIndex","startIndex","xMin","dx","lastIndex","intermediateIndex1","intermediateIndex2","minMaxDecimation","_getBounds","_findSegmentEnd","_getEdge","_createBoundaryLine","boundary","linePoints","_pointsFromSegments","_shouldApplyFill","_resolveTarget","propagate","visited","_decodeFill","fillOption","parseFillOption","firstCh","decodeTargetIndex","addPointsBelow","sourcePoint","linesBelow","postponed","findPoint","unshift","pointValue","firstValue","lastValue","simpleArc","_drawfill","getLineByIndex","sourcePoints","below","getLinesBelow","_buildStackLine","_getTargetValue","computeCircularBoundary","_getTargetPixel","computeLinearBoundary","computeBoundary","lineOpts","above","clipVertical","doFill","clipY","lineLoop","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","legendItemText","calculateItemWidth","fontLineHeight","calculateLegendItemHeight","calculateItemHeight","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","hitbox1","_draw","defaultColor","halfFontSize","cursor","textDirection","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","drawLegendBox","_textX","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","sameItem","plugin_legend","_element","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","plugin_title","titleBlock","createTitle","WeakMap","plugin_subtitle","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","defaultCallbacks","beforeTitle","tooltipItems","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","Colors","Decimation","Filler","SubTitle","_getLabelForValue","relativeLabelSize","minSpacing","LinearScaleBase","_startValue","_endValue","_valueRange","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","maxTicks","stepSize","computeTickLimit","generationOptions","dataRange","precision","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","niceMin","niceMax","numSpaces","rounded","almostWhole","decimalPlaces","generateTicks$1","LinearScale","log10Floor","changeExponent","isMajor","tickVal","steps","rangeExp","rangeStep","LogarithmicScale","_zero","minExp","exp","startExp","lastTick","generateTicks","getTickBackdropHeight","determineLimits","updateLimits","limits","hLimits","vLimits","getTextAlignForAngle","yForAngle","pathRadiusLine","getPointPosition","RadialLinearScale","animate","centerPointLabels","drawingArea","_pointLabels","_pointLabelItems","valueCount","pointLabelOpts","additionalAngle","getPointLabelContext","plFont","setCenterPoint","extra","outerDistance","pointLabelPosition","buildPointLabelItems","fitWithPointLabels","leftMovement","rightMovement","topMovement","bottomMovement","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","getBasePosition","getPointLabelPosition","backdropLeft","backdropTop","backdropWidth","backdropHeight","drawPointLabels","gridLineOpts","drawRadiusLine","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","CategoryScale","_addedLabels","added","addedLabels","addIfString","lastIndexOf","findOrAddLabel","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables","formattedTimestamp","timestamp","hours","getHours","minutes","getMinutes","seconds","getSeconds","formattedTime","substr","querySelector","innerHTML","currencies","localStorage","getItem","async","fetchAndUpdate","shouldForce","myCookie","cookie","log","today","tomorrow","setDate","getDate","myHeaders","Headers","append","requestOptions","redirect","headers","fetch","response","json","setItem","catch","preventDefault","productsContainer","staticData","product","section","createElement","asideInfo","asideCharts","image","appendChild","btnPrevious","scrollIntoView","btnNext","btnTop","navTabs","chartPanel","classList","btnTab","divTab","plainDiv","chartCanvas","buttons","querySelectorAll","btn","tabs","tab","attributes","populateProducts","btnStart","initialProduct","_convertCurrency","currency","cost","quotes","listPrices","country","countryPrice","toLocaleString","countriesNames","_renderChart","showData","showTitle","showLabel","salariesUSD","countryMinWage","percentage","eachPercentage","toFixed","percentageMinimumWage","days","delayed","zeroLineColor","setInterval","txt"],"sourceRoot":""}
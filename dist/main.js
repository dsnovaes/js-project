/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _scripts_charts__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scripts/charts */ \"./src/scripts/charts.js\");\n/* harmony import */ var _scripts_charts__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_scripts_charts__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _scripts_data__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./scripts/data */ \"./src/scripts/data.js\");\n\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  // updates the currencies\n  // still needs to have a logic that if it fails, \n  // the variable should have static values\n\n  const btnUpdate = document.querySelector(\"#exchangeStatus button\");\n  btnUpdate.addEventListener(\"click\", updateCurrencies);\n  function updateCurrencies() {\n    let icon = document.querySelector(\"#exchangeStatus button i\");\n    const btnUpdateText = document.querySelector(\"#exchangeStatus button span\");\n    icon.classList.add(\"rotate\");\n    btnUpdateText.textContent = \"Updating currencies\";\n\n    // keep this false to save requests\n    // change to true to fetch from the API\n    let fetching = false;\n    if (fetching) {\n      var myHeaders = new Headers();\n      myHeaders.append(\"apikey\", \"i6Gvyy6na70P0E5YGt4d2FyO7dlu59mk\");\n      let exchangeRates = {};\n      var requestOptions = {\n        method: 'GET',\n        redirect: 'follow',\n        headers: myHeaders\n      };\n      fetch(\"https://api.apilayer.com/currency_data/live?source=USD&currencies=BRL%2CEUR%2CINR%2CRUB%2CCNY\", requestOptions).then(response => response.json()).then(result => {\n        console.log(\"exchange rates updated\");\n        exchangeRates = result;\n      }).catch(error => {\n        // makes sure that exchangeRates will have rates\n        exchangeRates = exchangeRatesStatic;\n        console.error('error', error);\n      });\n      icon.classList.remove(\"rotate\");\n      btnUpdateText.textContent = \"Update currencies\";\n      return exchangeRates;\n    } else {\n      console.log(\"exchange rates (not) updated\");\n      icon.classList.remove(\"rotate\");\n      btnUpdateText.textContent = \"Update currencies\";\n      return exchangeRatesStatic;\n    }\n  }\n\n  // populate section \"products\"\n  function populateProducts() {\n    const productsContainer = document.getElementById(\"products\");\n    Object.entries(_scripts_data__WEBPACK_IMPORTED_MODULE_1__.products).forEach((product, index) => {\n      // creates the main div of a product\n      const div = document.createElement(\"section\");\n      div.setAttribute(\"id\", `product-${index}`);\n      div.setAttribute(\"style\", `background-color:${product[1].primaryColor};color:${product[1].secondaryColor}`);\n\n      // creates elements and populates them\n      const asideInfo = document.createElement(\"aside\");\n      asideInfo.setAttribute(\"class\", \"info\");\n      const asideGraphs = document.createElement(\"aside\");\n      asideGraphs.setAttribute(\"class\", \"graphs\");\n      const h1 = document.createElement(\"h1\");\n      h1.innerHTML = product[1].title;\n      const h2 = document.createElement(\"h2\");\n      h2.innerHTML = product[1].subtitle;\n      const image = document.createElement(\"img\");\n      image.setAttribute(\"src\", `assets/img/${product[0]}.png`);\n      image.setAttribute(\"alt\", product[1].title); // for accessibility purposes\n\n      // appends elements to asideInfo\n      asideInfo.appendChild(h1);\n      asideInfo.appendChild(h2);\n      asideInfo.appendChild(image);\n\n      // creates the 'previous' button if it isn't the first element\n      if (index !== 0) {\n        const btnPrevious = document.createElement(\"button\");\n        btnPrevious.setAttribute(\"style\", `background-color:${product[1].primaryColor};color:${product[1].secondaryColor};border:1px solid ${product[1].secondaryColor};border-radius:5px;margin-right:15px;`);\n        btnPrevious.innerHTML = '<i class=\"fa-solid fa-arrow-left\"></i>';\n        asideInfo.appendChild(btnPrevious);\n        btnPrevious.addEventListener(\"click\", function (e) {\n          e.preventDefault();\n          document.getElementById(`product-${index - 1}`).scrollIntoView();\n        });\n      }\n\n      // creates the 'next' button if it isn't the last element\n      if (index !== Object.entries(_scripts_data__WEBPACK_IMPORTED_MODULE_1__.products).length - 1) {\n        const btnNext = document.createElement(\"button\");\n        btnNext.setAttribute(\"style\", `background-color:${product[1].secondaryColor};color:${product[1].primaryColor};border-radius:5px;border:0;`);\n        btnNext.innerHTML = 'Next <i class=\"fa-solid fa-arrow-right\" style=\"margin-left:30px;\"></i>';\n        asideInfo.appendChild(btnNext);\n        btnNext.addEventListener(\"click\", function (e) {\n          e.preventDefault();\n          document.getElementById(`product-${index + 1}`).scrollIntoView();\n        });\n      }\n\n      // creates the 'back to top' button if it is the last element\n      if (index === Object.entries(_scripts_data__WEBPACK_IMPORTED_MODULE_1__.products).length - 1) {\n        const btnTop = document.createElement(\"button\");\n        btnTop.setAttribute(\"style\", `\n                    background-color:${product[1].primaryColor};\n                    color:${product[1].secondaryColor};\n                    border-radius:5px;\n                    border:1px solid ${product[1].secondaryColor};`);\n        btnTop.innerHTML = 'Back to top <i class=\"fa-solid fa-arrow-up\" style=\"margin-left:15px;\"></i>';\n        asideInfo.appendChild(btnTop);\n        btnTop.addEventListener(\"click\", function (e) {\n          e.preventDefault();\n          document.getElementById(\"splash-screen\").scrollIntoView();\n        });\n      }\n\n      // creates the tabs naviagations and panels on the right\n      const navTabs = document.createElement(\"nav\");\n      div.appendChild(asideGraphs);\n      let chartPanel = document.createElement(\"div\");\n      chartPanel.classList.add(`product-${index}-panel`);\n      for (let i = 0; i < 3; i++) {\n        let btnTab = document.createElement(\"button\");\n        let divTab = document.createElement(\"div\");\n        btnTab.setAttribute(\"data-id\", `product-${index}-tab-${i}`);\n        if (i === 0) {\n          // creates the button\n          btnTab.innerHTML = \"price\";\n          btnTab.classList.add(`tab-${index}`);\n          btnTab.classList.add(\"selected\");\n          btnTab.setAttribute(\"style\", `\n                        background-color:${product[1].primaryColor};\n                        color:${product[1].secondaryColor};\n                        border:1px solid ${product[1].secondaryColor};\n                        border-radius:5px 0 0 5px;`);\n\n          // creates the panel\n          divTab.setAttribute(\"id\", `product-${index}-tab-${i}`);\n          divTab.classList.add(\"selected\");\n          divTab.innerHTML = `content for prices tab`;\n          chartPanel.appendChild(divTab);\n        } else if (i === 1) {\n          // creates the button\n          btnTab.innerHTML = \"% minimum wage\";\n          btnTab.classList.add(`tab-${index}`);\n          btnTab.setAttribute(\"style\", `\n                        background-color:${product[1].primaryColor};\n                        color:${product[1].secondaryColor};\n                        border:1px solid ${product[1].secondaryColor};\n                        border-left:0;\n                        border-right:0;\n                        border-radius:0;`);\n\n          // creates the panel\n          divTab.setAttribute(\"id\", `product-${index}-tab-${i}`);\n          divTab.classList.add(\"hidden\");\n          divTab.innerHTML = `content for % minimum wage tab`;\n          chartPanel.appendChild(divTab);\n        } else if (i === 2) {\n          // creates the button\n          btnTab.innerHTML = \"days to buy\";\n          btnTab.classList.add(`tab-${index}`);\n          btnTab.setAttribute(\"style\", `\n                        background-color:${product[1].primaryColor};\n                        color:${product[1].secondaryColor};\n                        border:1px solid ${product[1].secondaryColor};\n                        border-radius:0 5px 5px 0;`);\n\n          // creates the panel\n          divTab.setAttribute(\"id\", `product-${index}-tab-${i}`);\n          divTab.classList.add(\"hidden\");\n          divTab.innerHTML = `content for days of work tab`;\n          chartPanel.appendChild(divTab);\n        }\n        navTabs.appendChild(btnTab);\n      }\n      asideGraphs.appendChild(navTabs);\n      asideGraphs.appendChild(chartPanel);\n\n      // logic to set 'selected' when a tab is clicked\n      navTabs.addEventListener(\"click\", e => {\n        // lists all tabs of the product and removes 'selected' class\n        const buttons = document.querySelectorAll(`#product-${index} nav button`);\n        Object.values(buttons).forEach(btn => btn.classList.remove(\"selected\"));\n\n        // lists all tab panels of the product and removes 'selected' class\n        const tabs = document.querySelectorAll(`.product-${index}-panel div`);\n        Object.values(tabs).forEach(tab => tab.classList.add(\"hidden\"));\n        Object.values(tabs).forEach(tab => tab.classList.remove(\"selected\"));\n\n        // enables 'selected' only to the clicked tab and panel\n        e.target.classList.add(\"selected\");\n        document.getElementById(e.path[0].attributes[0].value).classList.remove(\"hidden\");\n        document.getElementById(e.path[0].attributes[0].value).classList.add(\"selected\");\n      });\n\n      // appends asideInfo to div and div to container\n      div.appendChild(asideInfo);\n      div.appendChild(asideGraphs);\n      productsContainer.appendChild(div);\n\n      // const ul = document.createElement(\"ul\")\n      // div.appendChild(ul)\n      // const productPrices = listPrices(product)\n      // productPrices.forEach((price)=>{\n      //     const li = document.createElement(\"li\")\n      //     li.innerHTML = price;\n      //     ul.appendChild(li)\n      // })\n    });\n  }\n\n  populateProducts();\n\n  // creates a listener to the \"start\" button\n  const btnStart = document.querySelector(\".headline button\");\n  const initialProduct = document.getElementById(\"product-0\");\n  btnStart.addEventListener(\"click\", function (e) {\n    e.preventDefault();\n    initialProduct.scrollIntoView();\n  });\n\n  // creates a listener so the footer becomes a link back to the top\n  const footer = document.querySelector(\"footer\");\n  footer.addEventListener(\"click\", function (e) {\n    document.getElementById(\"splash-screen\").scrollIntoView();\n  });\n\n  // formats the timestamp\n\n  const formattedTimestamp = timestamp => {\n    let unix_timestamp = exchangeRateResponse.timestamp;\n    // Create a new JavaScript Date object based on the timestamp\n    // multiplied by 1000 so that the argument is in milliseconds, not seconds.\n    var date = new Date(unix_timestamp * 1000);\n    // Hours part from the timestamp\n    var hours = date.getHours();\n    // Minutes part from the timestamp\n    var minutes = \"0\" + date.getMinutes();\n    // Seconds part from the timestamp\n    var seconds = \"0\" + date.getSeconds();\n\n    // Will display time in 10:30:23 format\n    var formattedTime = hours + ':' + minutes.substr(-2) + ':' + seconds.substr(-2);\n  };\n\n  // calculates the conversion\n  function _convertCurrency(currency, cost) {\n    let rate = exchangeRatesStatic.quotes[\"USD\" + currency];\n    return cost / rate;\n  }\n\n  // returns the object of a product with converted prices \n  function listPrices(product) {\n    let prices = [];\n    Object.entries(product[1].prices).forEach(country => {\n      prices.push(_convertCurrency(country[0], country[1]).toLocaleString('en-US', {\n        style: 'currency',\n        currency: 'USD'\n      }));\n    });\n    return prices;\n  }\n\n  // swapping country names\n  var i = 0;\n  var text = \"USA\";\n  document.querySelector(\".headline h2 span\").innerHTML = _scripts_data__WEBPACK_IMPORTED_MODULE_1__.countries.length;\n  function _getChangedText() {\n    i = (i + 1) % _scripts_data__WEBPACK_IMPORTED_MODULE_1__.countries.length;\n    // console.log(countries[i]);\n    // console.log(i);\n    return text.replace(/USA/, _scripts_data__WEBPACK_IMPORTED_MODULE_1__.countries[i]);\n  }\n  function _changeText() {\n    var txt = _getChangedText();\n    // console.log(txt);\n    document.querySelector(\".headline h1 span\").innerHTML = txt;\n  }\n  setInterval(_changeText, 2500);\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/scripts/charts.js":
/*!*******************************!*\
  !*** ./src/scripts/charts.js ***!
  \*******************************/
/***/ (function() {

eval("let height = 400;\nlet width = 400,\n  margin = {\n    top: 30,\n    right: 0,\n    bottom: 60,\n    left: 30\n  };\n\n//START creating tooltip\nlet tooltip = d3.select('body').append('div').style('position', 'absolute').style('padding', '0 10px').style('background', 'white').style('opacity', 0);\n//END creating tooltio\n\nlet svg = d3.select(\"#chart\").append(\"svg\").attr(\"width\", width + margin.left + margin.right).attr(\"height\", height + margin.top + margin.bottom).append(\"g\").attr(\"transform\", `translate(${margin.left}, ${margin.top})`);\n\n//START creating left Axis\nlet y = d3.scaleLinear().range([height, 0]);\nfunction leftAxis(data) {\n  y.domain([0, d3.max(data.map(e => e.students), d => +d)]);\n  svg.append(\"g\").call(d3.axisLeft(y));\n}\n\n//fetching data\nd3.json(\"example.json\").then(data => {\n  leftAxis(data);\n});\n//END creating left Axis\n\n//START creating bottom Axis     \nlet x = d3.scaleBand().range([0, width]).padding(0.2);\nfunction bottomAxis(data) {\n  x.domain(data.map(e => e.term));\n  const text = svg.append(\"g\").attr(\"transform\", `translate(0, ${height})`).call(d3.axisBottom(x));\n}\n//fetching data           \nd3.json(\"example.json\").then(data => {\n  bottomAxis(data);\n});\n//END creating bottom Axis \n\n//START creating Bars/rect\nfunction createBars(data) {\n  let bars = svg.selectAll(\".bars\").data(data, d => d.term).enter().append(\"g\").attr(\"class\", \"bars\").style(\"opacity\", 1);\n\n  // Appending rectangles\n  bars.append(\"rect\").attr(\"class\", \"bar\").attr(\"x\", d => x(d.term)).attr(\"y\", d => y(0)).attr(\"width\", x.bandwidth()).attr(\"height\", 0).style(\"fill\", \"lightblue\").attr(\"y\", d => y(d.students)).attr(\"height\", d => height - y(d.students))\n\n  //appending events with tooltip\n  .on('mouseover', function (event, d) {\n    const [x, y] = d3.pointer(event);\n    tooltip.transition().style('opacity', .8);\n    tooltip.html(`Term - ${d.term} <br>\n                        Students - ${d.students}`).style('left', x + 40 + 'px').style('top', y + 30 + 'px');\n    d3.select(this).style('opacity', 1);\n  }).on('mouseout', function (event, d) {\n    d3.select(this).style('opacity', 1);\n    tooltip.html('');\n  });\n}\n;\n\n//fetching data            \nd3.json(\"example.json\").then(data => {\n  createBars(data);\n});\n//END creating Bars/rect//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/charts.js\n");

/***/ }),

/***/ "./src/scripts/data.js":
/*!*****************************!*\
  !*** ./src/scripts/data.js ***!
  \*****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"countries\": function() { return /* binding */ countries; },\n/* harmony export */   \"exchangeRatesStatic\": function() { return /* binding */ exchangeRatesStatic; },\n/* harmony export */   \"minimumWage\": function() { return /* binding */ minimumWage; },\n/* harmony export */   \"products\": function() { return /* binding */ products; }\n/* harmony export */ });\n// static data\nconst countries = [\"Brazil\", \"China\", \"India\", \"Spain\", \"Russia\", \"USA\"];\nconst exchangeRatesStatic = {\n  \"quotes\": {\n    \"USDBRL\": 5.185203,\n    \"USDCNY\": 7.054298,\n    \"USDEUR\": 0.94975,\n    \"USDINR\": 81.180497,\n    \"USDRUB\": 61.715006\n  },\n  \"source\": \"USD\",\n  \"success\": true,\n  \"timestamp\": 1669964283\n};\nconst products = {\n  mcchicken: {\n    prices: {\n      \"BRL\": 20.90,\n      \"CNY\": 12,\n      \"EUR\": 4.58,\n      \"INR\": 112,\n      \"RUB\": 100\n    },\n    primaryColor: \"#FFC72C\",\n    secondaryColor: \"#27251F\",\n    title: \"Mc Chicken\",\n    subtitle: \"Burger only, not the meal\",\n    imageOffset: null\n  },\n  corolla: {\n    prices: {\n      \"BRL\": 147790,\n      \"CNY\": 120000,\n      \"EUR\": 22100,\n      \"INR\": 1646000,\n      \"RUB\": 2032000\n    },\n    primaryColor: \"#fff\",\n    secondaryColor: \"#EB0A1E\",\n    title: \"Toyota Corolla\",\n    subtitle: \"2022 model, entry version\",\n    imageOffset: null\n  },\n  jeans: {\n    prices: {\n      \"BRL\": 460,\n      \"CNY\": 439,\n      \"EUR\": 110,\n      \"INR\": 8500,\n      \"RUB\": 8600\n    },\n    primaryColor: \"#C41230\",\n    secondaryColor: \"#fff\",\n    title: \"Levi's Jeans\",\n    subtitle: \"501® Original Fit Jeans\",\n    imageOffset: null\n  },\n  iphone: {\n    prices: {\n      \"BRL\": 9499,\n      \"CNY\": 7999,\n      \"EUR\": 1319,\n      \"INR\": 129900,\n      \"RUB\": 99990\n    },\n    primaryColor: \"#000\",\n    secondaryColor: \"#fff\",\n    title: \"iPhone\",\n    subtitle: \"iPhone 14 Pro 128GB\",\n    imageOffset: null\n  },\n  coke: {\n    prices: {\n      \"BRL\": 3.99,\n      \"CNY\": 9.975,\n      // 4-pack price, divided by 4 (39.9/4)\n      \"EUR\": 1.95,\n      \"INR\": 65,\n      \"RUB\": 51.85\n    },\n    primaryColor: \"#F40009\",\n    secondaryColor: \"#fff\",\n    title: \"Coke\",\n    subtitle: \"1L (33oz) bottle\",\n    imageOffset: null\n  }\n};\n\n// national average minimum wage: 22 CNY per hour\n// national average is about 5000 CNY per month\n\nconst minimumWage = {\n  \"BRL\": 1212,\n  \"CNY\": 3872,\n  // yuan / rmb => ChiNeseYuan\n  \"EUR\": 1050,\n  \"INR\": 9306,\n  \"RUB\": 13617\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUssRUFBRTtBQUNYLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qcy1wcm9qZWN0Ly4vc3JjL3NjcmlwdHMvZGF0YS5qcz9mYmQxIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHN0YXRpYyBkYXRhXG5leHBvcnQgY29uc3QgY291bnRyaWVzID0gW1wiQnJhemlsXCIsIFwiQ2hpbmFcIiwgXCJJbmRpYVwiLCBcIlNwYWluXCIsIFwiUnVzc2lhXCIsIFwiVVNBXCJdXG5cbmV4cG9ydCBjb25zdCBleGNoYW5nZVJhdGVzU3RhdGljID0ge1xuICAgIFwicXVvdGVzXCI6IHtcbiAgICAgICAgXCJVU0RCUkxcIjogNS4xODUyMDMsXG4gICAgICAgIFwiVVNEQ05ZXCI6IDcuMDU0Mjk4LFxuICAgICAgICBcIlVTREVVUlwiOiAwLjk0OTc1LFxuICAgICAgICBcIlVTRElOUlwiOiA4MS4xODA0OTcsXG4gICAgICAgIFwiVVNEUlVCXCI6IDYxLjcxNTAwNlxuICAgIH0sXG4gICAgXCJzb3VyY2VcIjogXCJVU0RcIixcbiAgICBcInN1Y2Nlc3NcIjogdHJ1ZSxcbiAgICBcInRpbWVzdGFtcFwiOiAxNjY5OTY0MjgzXG59XG5cbmV4cG9ydCBjb25zdCBwcm9kdWN0cyA9IHtcbiAgICBtY2NoaWNrZW46IHtcbiAgICAgICAgcHJpY2VzOiB7XG4gICAgICAgICAgICBcIkJSTFwiOiAyMC45MCxcbiAgICAgICAgICAgIFwiQ05ZXCI6IDEyLFxuICAgICAgICAgICAgXCJFVVJcIjogNC41OCxcbiAgICAgICAgICAgIFwiSU5SXCI6IDExMixcbiAgICAgICAgICAgIFwiUlVCXCI6IDEwMFxuICAgICAgICB9LFxuICAgICAgICBwcmltYXJ5Q29sb3I6IFwiI0ZGQzcyQ1wiLFxuICAgICAgICBzZWNvbmRhcnlDb2xvcjogXCIjMjcyNTFGXCIsXG4gICAgICAgIHRpdGxlOiBcIk1jIENoaWNrZW5cIixcbiAgICAgICAgc3VidGl0bGU6IFwiQnVyZ2VyIG9ubHksIG5vdCB0aGUgbWVhbFwiLFxuICAgICAgICBpbWFnZU9mZnNldDogbnVsbFxuICAgIH0sXG4gICAgY29yb2xsYToge1xuICAgICAgICBwcmljZXM6IHtcbiAgICAgICAgICAgIFwiQlJMXCI6IDE0Nzc5MCxcbiAgICAgICAgICAgIFwiQ05ZXCI6IDEyMDAwMCxcbiAgICAgICAgICAgIFwiRVVSXCI6IDIyMTAwLFxuICAgICAgICAgICAgXCJJTlJcIjogMTY0NjAwMCxcbiAgICAgICAgICAgIFwiUlVCXCI6IDIwMzIwMDBcbiAgICAgICAgfSxcbiAgICAgICAgcHJpbWFyeUNvbG9yOiBcIiNmZmZcIixcbiAgICAgICAgc2Vjb25kYXJ5Q29sb3I6IFwiI0VCMEExRVwiLFxuICAgICAgICB0aXRsZTogXCJUb3lvdGEgQ29yb2xsYVwiLFxuICAgICAgICBzdWJ0aXRsZTogXCIyMDIyIG1vZGVsLCBlbnRyeSB2ZXJzaW9uXCIsXG4gICAgICAgIGltYWdlT2Zmc2V0OiBudWxsXG4gICAgfSxcbiAgICBqZWFuczoge1xuICAgICAgICBwcmljZXM6IHtcbiAgICAgICAgICAgIFwiQlJMXCI6IDQ2MCxcbiAgICAgICAgICAgIFwiQ05ZXCI6IDQzOSxcbiAgICAgICAgICAgIFwiRVVSXCI6IDExMCxcbiAgICAgICAgICAgIFwiSU5SXCI6IDg1MDAsXG4gICAgICAgICAgICBcIlJVQlwiOiA4NjAwXG4gICAgICAgIH0sXG4gICAgICAgIHByaW1hcnlDb2xvcjogXCIjQzQxMjMwXCIsXG4gICAgICAgIHNlY29uZGFyeUNvbG9yOiBcIiNmZmZcIixcbiAgICAgICAgdGl0bGU6IFwiTGV2aSdzIEplYW5zXCIsXG4gICAgICAgIHN1YnRpdGxlOiBcIjUwMcKuIE9yaWdpbmFsIEZpdCBKZWFuc1wiLFxuICAgICAgICBpbWFnZU9mZnNldDogbnVsbFxuICAgIH0sXG4gICAgaXBob25lOiB7XG4gICAgICAgIHByaWNlczoge1xuICAgICAgICAgICAgXCJCUkxcIjogOTQ5OSxcbiAgICAgICAgICAgIFwiQ05ZXCI6IDc5OTksXG4gICAgICAgICAgICBcIkVVUlwiOiAxMzE5LFxuICAgICAgICAgICAgXCJJTlJcIjogMTI5OTAwLFxuICAgICAgICAgICAgXCJSVUJcIjogOTk5OTBcbiAgICAgICAgfSxcbiAgICAgICAgcHJpbWFyeUNvbG9yOiBcIiMwMDBcIixcbiAgICAgICAgc2Vjb25kYXJ5Q29sb3I6IFwiI2ZmZlwiLFxuICAgICAgICB0aXRsZTogXCJpUGhvbmVcIixcbiAgICAgICAgc3VidGl0bGU6IFwiaVBob25lIDE0IFBybyAxMjhHQlwiLFxuICAgICAgICBpbWFnZU9mZnNldDogbnVsbFxuICAgIH0sXG4gICAgY29rZToge1xuICAgICAgICBwcmljZXM6IHtcbiAgICAgICAgICAgIFwiQlJMXCI6IDMuOTksXG4gICAgICAgICAgICBcIkNOWVwiOiA5Ljk3NSwgLy8gNC1wYWNrIHByaWNlLCBkaXZpZGVkIGJ5IDQgKDM5LjkvNClcbiAgICAgICAgICAgIFwiRVVSXCI6IDEuOTUsXG4gICAgICAgICAgICBcIklOUlwiOiA2NSxcbiAgICAgICAgICAgIFwiUlVCXCI6IDUxLjg1XG4gICAgICAgIH0sXG4gICAgICAgIHByaW1hcnlDb2xvcjogXCIjRjQwMDA5XCIsXG4gICAgICAgIHNlY29uZGFyeUNvbG9yOiBcIiNmZmZcIixcbiAgICAgICAgdGl0bGU6IFwiQ29rZVwiLFxuICAgICAgICBzdWJ0aXRsZTogXCIxTCAoMzNveikgYm90dGxlXCIsXG4gICAgICAgIGltYWdlT2Zmc2V0OiBudWxsXG4gICAgfVxufVxuXG4vLyBuYXRpb25hbCBhdmVyYWdlIG1pbmltdW0gd2FnZTogMjIgQ05ZIHBlciBob3VyXG4vLyBuYXRpb25hbCBhdmVyYWdlIGlzIGFib3V0IDUwMDAgQ05ZIHBlciBtb250aFxuXG5leHBvcnQgY29uc3QgbWluaW11bVdhZ2UgPSB7XG4gICAgXCJCUkxcIjogMTIxMixcbiAgICBcIkNOWVwiOiAzODcyLCAvLyB5dWFuIC8gcm1iID0+IENoaU5lc2VZdWFuXG4gICAgXCJFVVJcIjogMTA1MCxcbiAgICBcIklOUlwiOiA5MzA2LFxuICAgIFwiUlVCXCI6IDEzNjE3XG59Il0sIm5hbWVzIjpbImNvdW50cmllcyIsImV4Y2hhbmdlUmF0ZXNTdGF0aWMiLCJwcm9kdWN0cyIsIm1jY2hpY2tlbiIsInByaWNlcyIsInByaW1hcnlDb2xvciIsInNlY29uZGFyeUNvbG9yIiwidGl0bGUiLCJzdWJ0aXRsZSIsImltYWdlT2Zmc2V0IiwiY29yb2xsYSIsImplYW5zIiwiaXBob25lIiwiY29rZSIsIm1pbmltdW1XYWdlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/scripts/data.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2Nzcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qcy1wcm9qZWN0Ly4vc3JjL2luZGV4LnNjc3M/OTc0NSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW5cbmV4cG9ydCB7fTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	!function() {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = function(module) {
/******/ 			var getter = module && module.__esModule ?
/******/ 				function() { return module['default']; } :
/******/ 				function() { return module; };
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	!function() {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = function(exports, definition) {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_require__("./src/index.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.scss");
/******/ 	
/******/ })()
;